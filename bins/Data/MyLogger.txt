2023-04-17 17:09:32.805 WRN default: Invalid QML element name " AccReportDateRangeElement"
2023-04-17 17:09:32.806 WRN default: Invalid QML element name " AccReportMonthRangeElement"
2023-04-17 17:09:32.806 WRN default: Invalid QML element name " BookingReportDateRangeElement"
2023-04-17 17:09:32.806 WRN default: Invalid QML element name " BookingReportMonthRangeElement"
2023-04-17 17:09:32.808 DBG default: static TrustListModel* TrustListModel::getTrustListModelInstance() 

2023-04-17 17:09:32.808 DBG default: static TrustListModel* TrustListModel::getTrustListModelInstance() In static getTrustListModelInstance of TrustListModel inside if 

2023-04-17 17:09:32.808 DBG default: TrustListModel::TrustListModel() 

2023-04-17 17:09:32.808 DBG default: void TrustListModel::init() 

2023-04-17 17:09:32.808 DBG default: TrustConfiguration::TrustConfiguration(QObject*) 

2023-04-17 17:09:32.808 DBG default: void TrustConfiguration::readTrustsFromJsonToList() path  "D:/TempleFile/TempleRamMadirupdatingNew2023/bins" 

2023-04-17 17:09:32.808 DBG default: file opened 

2023-04-17 17:09:32.808 DBG default: read all 

2023-04-17 17:09:32.808 DBG default: void TrustConfiguration::readTrustsFromJsonToList() dddddddoooooooooooocccccccc 

2023-04-17 17:09:32.808 DBG default: Trust::Trust(QObject*) 

2023-04-17 17:09:33.109 DBG qml: SingleTon is created. Screen density  == 6.228183399741848
2023-04-17 17:09:33.109 DBG qml: Screen screenWidth size =1920
2023-04-17 17:09:33.109 DBG qml: Screen screenHeight size =1000
2023-04-17 17:09:33.136 DBG qml: screen height= 1080
2023-04-17 17:09:33.136 DBG qml: screen width= 1920
2023-04-17 17:09:33.136 DBG qml: Screen MyStyles-screecnWidth size =1920
2023-04-17 17:09:33.136 DBG qml: Screen MyStyles-screenHeight size =1000
2023-04-17 17:09:33.136 DBG qml: screen density  == 6.228183399741848
2023-04-17 17:09:33.136 DBG qml: SingleTon is created. Screen density  == 6.228183399741848
2023-04-17 17:09:33.136 DBG qml: Screen screenWidth size =1920
2023-04-17 17:09:33.136 DBG qml: Screen screenHeight size =1000
2023-04-17 17:09:38.212 DBG default: int TrustListModel::getTrustListSize() 

2023-04-17 17:09:38.212 DBG default: int TrustListModel::getTrustListSize() 

2023-04-17 17:09:38.212 DBG qml: in else--------------
2023-04-17 17:09:38.212 DBG qml: in else------trustName--------Hubablli
2023-04-17 17:09:38.212 DBG qml: in else-------trustCode-------Hubablli
2023-04-17 17:09:38.212 DBG default: void TrustListModel::setCurrentConfigLocation(const QString&) 

2023-04-17 17:09:38.212 DBG default: void TrustListModel::setCurrentConfigLocation(const QString&) m_currentConfigLocation  "D:/TempleFile/TempleRamMadirupdatingNew2023/bins/Config/Hubablli" 

2023-04-17 17:09:38.212 DBG default: Inside lamda 

2023-04-17 17:09:38.212 DBG default: void TrustListModel::setCurrentDataLocation(const QString&) 

2023-04-17 17:09:38.212 DBG default: void TrustListModel::setCurrentDataLocation(const QString&) m_currentDataLocation  "D:/TempleFile/TempleRamMadirupdatingNew2023/bins/Data/Hubablli" 

2023-04-17 17:09:38.212 DBG default: Inside lamda 

2023-04-17 17:09:38.212 DBG default: QString TrustListModel::getConfigLocation() 

2023-04-17 17:09:38.212 DBG default: void ConfigureApp::loadXMLFile() "123.jpg"
2023-04-17 17:09:38.212 DBG default: void ConfigureApp::loadXMLFile() "123.jpg"
2023-04-17 17:09:38.212 DBG default: Creating the DataBase Connection  

2023-04-17 17:09:38.213 DBG default: static TrustListModel* TrustListModel::getTrustListModelInstance() 

2023-04-17 17:09:38.214 DBG default: QString TrustListModel::getDataLocation() 

2023-04-17 17:09:38.214 DBG default: DBInterface::DBInterface(QObject*) ******************* DB "D:/TempleFile/TempleRamMadirupdatingNew2023/bins/Data/Hubablli/nseva.db" 

2023-04-17 17:09:38.214 DBG default: Database is opened  "D:/TempleFile/TempleRamMadirupdatingNew2023/bins/Data/Hubablli/nseva.db" 

2023-04-17 17:09:38.214 DBG default: SevaTypeJsonProcessor::SevaTypeJsonProcessor(QObject*) 

2023-04-17 17:09:38.214 DBG default: void SevaTypeJsonProcessor::readSevaTypeFromJsonFormate() 

2023-04-17 17:09:38.214 DBG default: static TrustListModel* TrustListModel::getTrustListModelInstance() 

2023-04-17 17:09:38.214 DBG default: QString TrustListModel::getConfigLocation() 

2023-04-17 17:09:38.214 DBG default: file opened 

2023-04-17 17:09:38.214 DBG default: read all 

2023-04-17 17:09:38.214 DBG default: void SevaTypeJsonProcessor::readSevaTypeFromJsonFormate()  m_sevaTypeList.append(st); 

2023-04-17 17:09:38.214 DBG default: bool DBInterface::add_seva_type(SevaType*)  Seva Type Requested to Add =  1000 

2023-04-17 17:09:38.214 DBG default: bool DBInterface::add_seva_type(SevaType*)  Seva Type in DB = 1000 

2023-04-17 17:09:38.214 WRN default: bool DBInterface::add_seva_type(SevaType*)  Seva Type with ID =  1000 already exist in DB 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevaTypeFromJsonFormate()  m_sevaTypeList.append(st); 

2023-04-17 17:09:38.215 DBG default: bool DBInterface::add_seva_type(SevaType*)  Seva Type Requested to Add =  2000 

2023-04-17 17:09:38.215 DBG default: bool DBInterface::add_seva_type(SevaType*)  Seva Type in DB = 2000 

2023-04-17 17:09:38.215 WRN default: bool DBInterface::add_seva_type(SevaType*)  Seva Type with ID =  2000 already exist in DB 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::printSevaTypeNames() 

2023-04-17 17:09:38.215 DBG default: 1000 :  "Regular Seva" , 1000 , "Raj" 

2023-04-17 17:09:38.215 DBG default: 2000 :  "Aradhana Seva" , 2000 , "Abhi" 

2023-04-17 17:09:38.215 DBG default: void DBInterface::readSevaNamesFromJson() 

2023-04-17 17:09:38.215 DBG default: void DBInterface::readSevaNamesFromJson() 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 

2023-04-17 17:09:38.215 DBG default: static TrustListModel* TrustListModel::getTrustListModelInstance() 

2023-04-17 17:09:38.215 DBG default: QString TrustListModel::getConfigLocation() 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  path "D:/TempleFile/TempleRamMadirupdatingNew2023/bins/Config/Hubablli/SevaNames.json" 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() file opened 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() read all 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Udayaasthamaana Seva" 

2023-04-17 17:09:38.215 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.215 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1001 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.215 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Udayaasthamaana Seva"  sevaId=  1001 

2023-04-17 17:09:38.215 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1001 

2023-04-17 17:09:38.215 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1001 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Sarva Seva" 

2023-04-17 17:09:38.215 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.215 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1002 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.215 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.215 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Sarva Seva"  sevaId=  1002 

2023-04-17 17:09:38.216 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1002 

2023-04-17 17:09:38.216 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1002 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Sarva Samarpana Seva" 

2023-04-17 17:09:38.216 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.216 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1003 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.216 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Sarva Samarpana Seva"  sevaId=  1003 

2023-04-17 17:09:38.216 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1003 

2023-04-17 17:09:38.216 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1003 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Kanakaabhisheka" 

2023-04-17 17:09:38.216 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.216 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1004 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.216 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Kanakaabhisheka"  sevaId=  1004 

2023-04-17 17:09:38.216 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1004 

2023-04-17 17:09:38.216 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1004 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Godhana" 

2023-04-17 17:09:38.216 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.216 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1005 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.216 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Godhana"  sevaId=  1005 

2023-04-17 17:09:38.216 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1005 

2023-04-17 17:09:38.216 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1005 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Mahaa Pooja" 

2023-04-17 17:09:38.216 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.216 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1006 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.216 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.216 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Mahaa Pooja"  sevaId=  1006 

2023-04-17 17:09:38.216 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1006 

2023-04-17 17:09:38.217 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1006 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Ksheeraabhisheka" 

2023-04-17 17:09:38.217 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.217 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1007 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.217 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Ksheeraabhisheka"  sevaId=  1007 

2023-04-17 17:09:38.217 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1007 

2023-04-17 17:09:38.217 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1007 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Madhu Abhisheka" 

2023-04-17 17:09:38.217 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.217 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1008 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.217 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Madhu Abhisheka"  sevaId=  1008 

2023-04-17 17:09:38.217 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1008 

2023-04-17 17:09:38.217 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1008 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Yella Homagala Seva" 

2023-04-17 17:09:38.217 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.217 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1010 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.217 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Yella Homagala Seva"  sevaId=  1010 

2023-04-17 17:09:38.217 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1010 

2023-04-17 17:09:38.217 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1010 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Naivedhya/Hasthodaka" 

2023-04-17 17:09:38.217 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.217 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1011 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.217 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Naivedhya/Hasthodaka"  sevaId=  1011 

2023-04-17 17:09:38.217 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1011 

2023-04-17 17:09:38.217 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1011 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Phala - Panchaamrutha" 

2023-04-17 17:09:38.217 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.217 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1012 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.217 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.217 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Phala - Panchaamrutha"  sevaId=  1012 

2023-04-17 17:09:38.217 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1012 

2023-04-17 17:09:38.217 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1012 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Ganapathi Abhisheka" 

2023-04-17 17:09:38.218 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.218 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1013 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.218 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Ganapathi Abhisheka"  sevaId=  1013 

2023-04-17 17:09:38.218 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1013 

2023-04-17 17:09:38.218 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1013 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Nagadevara Abhisheka" 

2023-04-17 17:09:38.218 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.218 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1014 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.218 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Nagadevara Abhisheka"  sevaId=  1014 

2023-04-17 17:09:38.218 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1014 

2023-04-17 17:09:38.218 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1014 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Navagraha Abhisheka" 

2023-04-17 17:09:38.218 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.218 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1015 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.218 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Navagraha Abhisheka"  sevaId=  1015 

2023-04-17 17:09:38.218 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1015 

2023-04-17 17:09:38.218 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1015 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Rathothsava" 

2023-04-17 17:09:38.218 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.218 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1016 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.218 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Rathothsava"  sevaId=  1016 

2023-04-17 17:09:38.218 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1016 

2023-04-17 17:09:38.218 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1016 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Huggi Naivedhya" 

2023-04-17 17:09:38.218 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.218 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1017 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.218 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Huggi Naivedhya"  sevaId=  1017 

2023-04-17 17:09:38.218 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1017 

2023-04-17 17:09:38.218 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1017 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.218 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Pongal Naivedhya" 

2023-04-17 17:09:38.218 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.218 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1018 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.219 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Pongal Naivedhya"  sevaId=  1018 

2023-04-17 17:09:38.219 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1018 

2023-04-17 17:09:38.219 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1018 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Grahana Shanthi" 

2023-04-17 17:09:38.219 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.219 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1019 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.219 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Grahana Shanthi"  sevaId=  1019 

2023-04-17 17:09:38.219 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1019 

2023-04-17 17:09:38.219 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1019 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Kaarthika - Rathothsava" 

2023-04-17 17:09:38.219 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.219 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1020 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.219 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Kaarthika - Rathothsava"  sevaId=  1020 

2023-04-17 17:09:38.219 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1020 

2023-04-17 17:09:38.219 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1020 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Kaarthika Seva" 

2023-04-17 17:09:38.219 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.219 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1021 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.219 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Kaarthika Seva"  sevaId=  1021 

2023-04-17 17:09:38.219 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1021 

2023-04-17 17:09:38.219 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1021 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Sri Sathya Narayana Pooja" 

2023-04-17 17:09:38.219 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.219 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1022 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.219 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Sri Sathya Narayana Pooja"  sevaId=  1022 

2023-04-17 17:09:38.219 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1022 

2023-04-17 17:09:38.219 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1022 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Tulsi Archane" 

2023-04-17 17:09:38.219 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.219 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1023 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.219 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.220 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Tulsi Archane"  sevaId=  1023 

2023-04-17 17:09:38.220 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1023 

2023-04-17 17:09:38.220 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1023 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Chataka Shraadha" 

2023-04-17 17:09:38.220 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.220 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1024 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.220 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Chataka Shraadha"  sevaId=  1024 

2023-04-17 17:09:38.220 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1024 

2023-04-17 17:09:38.220 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1024 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Sankalpa Shraadha" 

2023-04-17 17:09:38.220 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.220 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1025 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.220 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Sankalpa Shraadha"  sevaId=  1025 

2023-04-17 17:09:38.220 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1025 

2023-04-17 17:09:38.220 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1025 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Vaahana Pooja" 

2023-04-17 17:09:38.220 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.220 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1026 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.220 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Vaahana Pooja"  sevaId=  1026 

2023-04-17 17:09:38.220 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1026 

2023-04-17 17:09:38.220 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1026 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Archane Seva" 

2023-04-17 17:09:38.220 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.220 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1027 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.220 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Archane Seva"  sevaId=  1027 

2023-04-17 17:09:38.220 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1027 

2023-04-17 17:09:38.220 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1027 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Lakshmi Pooja" 

2023-04-17 17:09:38.220 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.220 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1028 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.220 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Lakshmi Pooja"  sevaId=  1028 

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1028 

2023-04-17 17:09:38.221 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1028 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Navagraha Devarige Thailaabhisheka" 

2023-04-17 17:09:38.221 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.221 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1029 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Navagraha Devarige Thailaabhisheka"  sevaId=  1029 

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1029 

2023-04-17 17:09:38.221 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1029 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Pavamaana Homa" 

2023-04-17 17:09:38.221 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.221 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1030 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Pavamaana Homa"  sevaId=  1030 

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1030 

2023-04-17 17:09:38.221 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1030 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Gana Homa" 

2023-04-17 17:09:38.221 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.221 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1031 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Gana Homa"  sevaId=  1031 

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1031 

2023-04-17 17:09:38.221 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1031 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Mruthyunjaya Homa" 

2023-04-17 17:09:38.221 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.221 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1032 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Mruthyunjaya Homa"  sevaId=  1032 

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1032 

2023-04-17 17:09:38.221 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1032 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Rudraabhisheka" 

2023-04-17 17:09:38.221 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.221 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1033 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  1000 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Rudraabhisheka"  sevaId=  1033 

2023-04-17 17:09:38.221 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 1033 

2023-04-17 17:09:38.221 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 1033 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.221 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Ondu Dinada Sampurna Seva" 

2023-04-17 17:09:38.221 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.221 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2001 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.223 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Ondu Dinada Sampurna Seva"  sevaId=  2001 

2023-04-17 17:09:38.223 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2001 

2023-04-17 17:09:38.223 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2001 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Ondu Dinada Anna Santharpane Seva" 

2023-04-17 17:09:38.223 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.223 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2002 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.223 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Ondu Dinada Anna Santharpane Seva"  sevaId=  2002 

2023-04-17 17:09:38.223 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2002 

2023-04-17 17:09:38.223 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2002 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Alankara Seva(Huvina Alankara)" 

2023-04-17 17:09:38.223 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.223 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2003 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.223 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Alankara Seva(Huvina Alankara)"  sevaId=  2003 

2023-04-17 17:09:38.223 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2003 

2023-04-17 17:09:38.223 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2003 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Alankara Seva" 

2023-04-17 17:09:38.223 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.223 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2004 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.223 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Alankara Seva"  sevaId=  2004 

2023-04-17 17:09:38.223 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2004 

2023-04-17 17:09:38.223 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2004 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Noothana Vastra Seva" 

2023-04-17 17:09:38.223 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.223 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2005 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.223 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Noothana Vastra Seva"  sevaId=  2005 

2023-04-17 17:09:38.223 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2005 

2023-04-17 17:09:38.223 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2005 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.223 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Sarva seva" 

2023-04-17 17:09:38.223 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.224 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2006 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.224 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Sarva seva"  sevaId=  2006 

2023-04-17 17:09:38.224 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2006 

2023-04-17 17:09:38.224 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2006 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Kanakabhisheka Seva" 

2023-04-17 17:09:38.224 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.224 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2007 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.224 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Kanakabhisheka Seva"  sevaId=  2007 

2023-04-17 17:09:38.224 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2007 

2023-04-17 17:09:38.224 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2007 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Hasthodaka Seva(Prathidina)" 

2023-04-17 17:09:38.224 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.224 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2009 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.224 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Hasthodaka Seva(Prathidina)"  sevaId=  2009 

2023-04-17 17:09:38.224 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2009 

2023-04-17 17:09:38.224 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2009 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "MahaPooje" 

2023-04-17 17:09:38.224 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.224 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2010 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.224 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "MahaPooje"  sevaId=  2010 

2023-04-17 17:09:38.224 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2010 

2023-04-17 17:09:38.224 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2010 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Ashtothara Seva(Prathidina)" 

2023-04-17 17:09:38.224 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.224 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2011 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.224 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Ashtothara Seva(Prathidina)"  sevaId=  2011 

2023-04-17 17:09:38.224 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2011 

2023-04-17 17:09:38.224 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2011 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.224 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Paadakaradhane" 

2023-04-17 17:09:38.224 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.224 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2012 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.225 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Paadakaradhane"  sevaId=  2012 

2023-04-17 17:09:38.225 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2012 

2023-04-17 17:09:38.225 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2012 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "GanaHoma" 

2023-04-17 17:09:38.225 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.225 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2013 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.225 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "GanaHoma"  sevaId=  2013 

2023-04-17 17:09:38.225 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2013 

2023-04-17 17:09:38.225 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2013 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "PhalaPanchamrutha Seva" 

2023-04-17 17:09:38.225 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-04-17 17:09:38.225 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2014 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevatype string =  2000 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 22 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 33 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() emiting sendSevaName signal  

2023-04-17 17:09:38.225 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "PhalaPanchamrutha Seva"  sevaId=  2014 

2023-04-17 17:09:38.225 DBG default: bool DBInterface::createSeva(SevaName*)  Seva Name in DB = 2014 

2023-04-17 17:09:38.225 CRT default: bool DBInterface::createSeva(SevaName*) Seva with ID = 2014 

2023-04-17 17:09:38.225 DBG default: void DBInterface::readSevaNamesFromJson() 

2023-04-17 17:09:38.225 DBG default: void SevaTypeJsonProcessor::printSevasNames() 

2023-04-17 17:09:38.225 DBG default: 1001 :  "Udayaasthamaana Seva" , 1001 , 1 , 1000 , 5000 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1002 :  "Sarva Seva" , 1002 , 1 , 1000 , 2000 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1003 :  "Sarva Samarpana Seva" , 1003 , 1 , 1000 , 6000 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1004 :  "Kanakaabhisheka" , 1004 , 1 , 1000 , 1200 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1005 :  "Godhana" , 1005 , 1 , 1000 , 2000 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1006 :  "Mahaa Pooja" , 1006 , 1 , 1000 , 500 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1007 :  "Ksheeraabhisheka" , 1007 , 1 , 1000 , 300 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1008 :  "Madhu Abhisheka" , 1008 , 1 , 1000 , 200 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1010 :  "Yella Homagala Seva" , 1010 , 1 , 1000 , 6000 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1011 :  "Naivedhya/Hasthodaka" , 1011 , 1 , 1000 , 500 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1012 :  "Phala - Panchaamrutha" , 1012 , 1 , 1000 , 150 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1013 :  "Ganapathi Abhisheka" , 1013 , 1 , 1000 , 150 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1014 :  "Nagadevara Abhisheka" , 1014 , 1 , 1000 , 150 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1015 :  "Navagraha Abhisheka" , 1015 , 1 , 1000 , 150 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1016 :  "Rathothsava" , 1016 , 1 , 1000 , 1000 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1017 :  "Huggi Naivedhya" , 1017 , 1 , 1000 , 250 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1018 :  "Pongal Naivedhya" , 1018 , 1 , 1000 , 100 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1019 :  "Grahana Shanthi" , 1019 , 1 , 1000 , 100 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1020 :  "Kaarthika - Rathothsava" , 1020 , 1 , 1000 , 500 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1021 :  "Kaarthika Seva" , 1021 , 1 , 1000 , 250 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1022 :  "Sri Sathya Narayana Pooja" , 1022 , 1 , 1000 , 50 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1023 :  "Tulsi Archane" , 1023 , 1 , 1000 , 200 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1024 :  "Chataka Shraadha" , 1024 , 1 , 1000 , 600 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1025 :  "Sankalpa Shraadha" , 1025 , 1 , 1000 , 500 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1026 :  "Vaahana Pooja" , 1026 , 1 , 1000 , 50 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1027 :  "Archane Seva" , 1027 , 1 , 1000 , 25 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1028 :  "Lakshmi Pooja" , 1028 , 1 , 1000 , 200 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1029 :  "Navagraha Devarige Thailaabhisheka" , 1029 , 1 , 1000 , 500 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1030 :  "Pavamaana Homa" , 1030 , 1 , 1000 , 100 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1031 :  "Gana Homa" , 1031 , 1 , 1000 , 100 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1032 :  "Mruthyunjaya Homa" , 1032 , 1 , 1000 , 100 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 1033 :  "Rudraabhisheka" , 1033 , 1 , 1000 , 300 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 2001 :  "Ondu Dinada Sampurna Seva" , 2001 , 1 , 2000 , 25001 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.225 DBG default: 2002 :  "Ondu Dinada Anna Santharpane Seva" , 2002 , 1 , 2000 , 20001 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: 2003 :  "Alankara Seva(Huvina Alankara)" , 2003 , 1 , 2000 , 10001 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: 2004 :  "Alankara Seva" , 2004 , 1 , 2000 , 5001 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: 2005 :  "Noothana Vastra Seva" , 2005 , 1 , 2000 , 4000 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: 2006 :  "Sarva seva" , 2006 , 1 , 2000 , 2501 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: 2007 :  "Kanakabhisheka Seva" , 2007 , 1 , 2000 , 1200 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: 2009 :  "Hasthodaka Seva(Prathidina)" , 2009 , 1 , 2000 , 1001 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: 2010 :  "MahaPooje" , 2010 , 1 , 2000 , 800 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: 2011 :  "Ashtothara Seva(Prathidina)" , 2011 , 1 , 2000 , 501 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: 2012 :  "Paadakaradhane" , 2012 , 1 , 2000 , 501 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: 2013 :  "GanaHoma" , 2013 , 1 , 2000 , 101 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: 2014 :  "PhalaPanchamrutha Seva" , 2014 , 1 , 2000 , 150 , 1 , "23-5-2022" , 5 , 0 , "5:00" , "JSA" , true 

2023-04-17 17:09:38.226 DBG default: void DBInterface::readSevaNamesFromJson() 

2023-04-17 17:09:38.226 DBG default: Creating the SevaTypeNamesDataModel  

2023-04-17 17:09:38.226 DBG default: SevaBookingConformationDataModel::SevaBookingConformationDataModel(QObject*) 

2023-04-17 17:09:38.226 DBG default: JsonWriter::JsonWriter(QObject*) 

2023-04-17 17:09:38.226 DBG default: SevaTypeNamesDataModel::SevaTypeNamesDataModel(QObject*) 

2023-04-17 17:09:38.226 DBG default: void SevaTypeNamesDataModel::connectSignals() 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::querySevaTypes() 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 1 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 2 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 3 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 4 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 5 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 6 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 7 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 8 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 9 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 10 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 11 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 12 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 13 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 14 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 15 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 16 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 0 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 18 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 19 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 20 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 25 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 22 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 1000 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 2000 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 26 

2023-04-17 17:09:38.226 DBG default: bool DBInterface::querySevaType() querying seva type done 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::querySevaNames() 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Chataka"  Type = 1  SevaID = 2 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hasthodaka"  Type = 1  SevaID = 3 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Dwadashi Hasthodaka"  Type = 1  SevaID = 4 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Grahana Shanthi Homa"  Type = 9  SevaID = 5 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))), QMap((5, SevaName(0x9209490))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Panchamrutha/Abhisheka"  Type = 1  SevaID = 6 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))), QMap((5, SevaName(0x9209490))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Samanya Kanike"  Type = 1  SevaID = 7 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))), QMap((5, SevaName(0x9209490))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Shop Kanike"  Type = 11  SevaID = 9 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))), QMap((5, SevaName(0x9209490))), QMap((9, SevaName(0x9209620))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nithya thaila seva"  Type = 9  SevaID = 10 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))), QMap((9, SevaName(0x9209620))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Building Fund"  Type = 12  SevaID = 11 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Alankar Pankthi"  Type = 4  SevaID = 12 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))), QMap((12, SevaName(0x9209800))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Aradhna Kanike"  Type = 4  SevaID = 13 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Annadhana "  Type = 4  SevaID = 14 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hundi Collections"  Type = 13  SevaID = 15 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Khara Huggi"  Type = 8  SevaID = 16 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sweet Huggi"  Type = 8  SevaID = 17 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Thatte Hasthodaka"  Type = 1  SevaID = 18 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Advance Recovered"  Type = 9  SevaID = 19 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PP - Rent"  Type = 14  SevaID = 20 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Sampoorna Annadana Seva"  Type = 3  SevaID = 23 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Pavamana Homa"  Type = 3  SevaID = 24 

2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.226 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Pavamana Homa Sankalp"  Type = 3  SevaID = 25 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Pravachna Seva-All days"  Type = 3  SevaID = 26 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Pravachana seva- 1 day"  Type = 3  SevaID = 27 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami  Annadana Sankalpa Seva"  Type = 3  SevaID = 28 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Hoovina Alankara seva"  Type = 3  SevaID = 29 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navmi Sarva seva"  Type = 3  SevaID = 30 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Sumadhwavijaya Parayana seva"  Type = 3  SevaID = 31 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Prakarosthava"  Type = 3  SevaID = 34 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Sampoorna Seva"  Type = 3  SevaID = 35 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Gruha Padapooja"  Type = 3  SevaID = 36 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Serva Seva"  Type = 1  SevaID = 37 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Kanike"  Type = 3  SevaID = 38 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Annadana seva "  Type = 3  SevaID = 39 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Pandith Sanman"  Type = 3  SevaID = 40 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M  Navami Panchamurtha "  Type = 3  SevaID = 41 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Navagraha Shanthi Homa"  Type = 15  SevaID = 42 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))))
2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Padapooja"  Type = 3  SevaID = 43 

2023-04-17 17:09:38.227 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Madhu Abhiseka"  Type = 3  SevaID = 44 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Gopaladasara Aradhane"  Type = 16  SevaID = 45 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Additional Sweets"  Type = 9  SevaID = 46 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hoovina alankara Seva"  Type = 1  SevaID = 47 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Prasada Seve"  Type = 1  SevaID = 48 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Chataka- 2 Hasthodaka"  Type = 1  SevaID = 49 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sathyanarayana Pooje"  Type = 10  SevaID = 50 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "AYUSH HOMA"  Type = 15  SevaID = 51 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "THAILA ABHYANJANA"  Type = 9  SevaID = 52 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nuthana Vastra Dharana"  Type = 9  SevaID = 53 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PANAKA KOSAMBARI  SAMPOORNA SEVE"  Type = 2  SevaID = 54 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PANAKA KOSAMBARI SANKLAPA SEVE"  Type = 2  SevaID = 55 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "SRI RAMA TARAKA HOMA"  Type = 2  SevaID = 56 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "SRI RAMA TARAKA HOMA SANKALPA"  Type = 2  SevaID = 57 

2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.228 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "SITA RAMA KALYANOTSVA"  Type = 2  SevaID = 58 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "SRI SITA RAMA KALYANOTSAVA SANKALPAA"  Type = 2  SevaID = 59 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PRATIDINA PRAVACHANA SEVE "  Type = 2  SevaID = 60 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "YELLA DINAGALA PRAVACHANA SEVE"  Type = 2  SevaID = 61 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "HOOVINA ALANKARA"  Type = 2  SevaID = 62 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi"  Type = 2  SevaID = 63 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PRATIDINA SANJE PRASADA SEVE"  Type = 2  SevaID = 64 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "VISHESHA PANCHAMRUTA"  Type = 2  SevaID = 65 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PRAKAROTSVA"  Type = 2  SevaID = 66 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "THAILABYAJANA SEVE"  Type = 2  SevaID = 67 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "ARCHANE"  Type = 2  SevaID = 68 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Raghavendra Swamy Aradhane"  Type = 16  SevaID = 69 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Abhisheka Madhu/Panchamrutha"  Type = 4  SevaID = 70 

2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))))
2023-04-17 17:09:38.229 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ashtottara"  Type = 4  SevaID = 71 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))))
2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hoovina Alankara"  Type = 4  SevaID = 72 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))))
2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Prakarothsava"  Type = 4  SevaID = 73 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))))
2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Deepalankarana Seve"  Type = 7  SevaID = 74 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))))
2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Tarakari Seve"  Type = 1  SevaID = 75 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))))
2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Dhanya Seva"  Type = 4  SevaID = 76 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))))
2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Bhiksha kanike"  Type = 18  SevaID = 77 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))))
2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "hastodaka P P"  Type = 5  SevaID = 78 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))))
2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Chataka P P"  Type = 5  SevaID = 79 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))))
2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sankalpa  P P"  Type = 5  SevaID = 80 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))))
2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Thaila Nanda Deepa for 9 days"  Type = 6  SevaID = 81 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))))
2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Grutha Nanda Deepa for  9 days"  Type = 6  SevaID = 82 

2023-04-17 17:09:38.230 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))))
2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Thaila Deepa for 1 day"  Type = 6  SevaID = 83 

2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))))
2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Grutha Deepa for 1 day"  Type = 6  SevaID = 84 

2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))))
2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Dhanya Seve"  Type = 1  SevaID = 85 

2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))))
2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Annadana Kanike"  Type = 1  SevaID = 86 

2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))))
2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pravachana"  Type = 19  SevaID = 87 

2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))))
2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pravachana for one day"  Type = 19  SevaID = 88 

2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pravachana Seva for one day"  Type = 6  SevaID = 89 

2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nitya Deepaseve"  Type = 7  SevaID = 90 

2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Thaila Abhyanjana"  Type = 7  SevaID = 91 

2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nuthana Vastra Dharane Seve"  Type = 7  SevaID = 92 

2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.231 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Laksha Deepostava"  Type = 7  SevaID = 93 

2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nuthana Vastra Dharane Pratyekavagi "  Type = 7  SevaID = 94 

2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Tulasi Damodara Vivaha sankalpa"  Type = 7  SevaID = 95 

2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Dhatri Havana Sampoorna Seve "  Type = 7  SevaID = 96 

2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Dhatri Havana Sankalpa Seve "  Type = 7  SevaID = 97 

2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Vishesha Hoovina Alankara "  Type = 7  SevaID = 98 

2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Vishesha Panchamrutha Abhisheka "  Type = 7  SevaID = 99 

2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Vijaya Dasara Aradhane"  Type = 16  SevaID = 100 

2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Prakarotsva"  Type = 1  SevaID = 101 

2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.232 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nithya Archane"  Type = 0  SevaID = 102 

2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nithya Archane"  Type = 1  SevaID = 103 

2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ashtotthara Kanike"  Type = 1  SevaID = 104 

2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Santhana Gopala Krishna Homa"  Type = 15  SevaID = 105 

2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pavamana Homa"  Type = 15  SevaID = 106 

2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))))
2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Shashwatha Seva Pooje"  Type = 20  SevaID = 107 

2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))))
2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hasthodaka Regular"  Type = 1  SevaID = 108 

2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))))
2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Huggi Seva"  Type = 8  SevaID = 109 

2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))))
2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Mosaranna Naivedya"  Type = 9  SevaID = 110 

2023-04-17 17:09:38.233 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))))
2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Poorna Pragna Hall Kanike"  Type = 14  SevaID = 111 

2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))), QMap((50, SevaName(0x9266040))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))))
2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pratyeka Sathyanarayana Pooja"  Type = 10  SevaID = 112 

2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))))
2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Chikka Adige"  Type = 9  SevaID = 113 

2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))))
2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Vishesha Panchamrutha"  Type = 21  SevaID = 114 

2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))))
2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Thaila Abhyanjan seve"  Type = 21  SevaID = 115 

2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))))
2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sri SeethaRamanjaneyarige Nuthana Vastra Dharane pratidevarige."  Type = 21  SevaID = 116 

2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))))
2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Prakarothsava"  Type = 21  SevaID = 117 

2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))))
2023-04-17 17:09:38.234 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Archane"  Type = 21  SevaID = 118 

2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))))
2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hoovina Alankara seve"  Type = 21  SevaID = 119 

2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))))
2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ramanavami Kanike"  Type = 2  SevaID = 120 

2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))))
2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Villeydhele Hara"  Type = 1  SevaID = 121 

2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))))
2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Gandha Lepana "  Type = 22  SevaID = 122 

2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))))
2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Phalahara Pooja"  Type = 9  SevaID = 123 

2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))))
2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "GanaHoma"  Type = 15  SevaID = 124 

2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))))
2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hasthodaka Monthly"  Type = 1  SevaID = 125 

2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))))
2023-04-17 17:09:38.235 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Jayathirtha Aradhane Kanike"  Type = 16  SevaID = 126 

2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))))
2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Oldarticals sold"  Type = 9  SevaID = 127 

2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))))
2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Udayaasthamaana Seva"  Type = 1000  SevaID = 1001 

2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))))
2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sarva Seva"  Type = 1000  SevaID = 1002 

2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))))
2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sarva Samarpana Seva"  Type = 1000  SevaID = 1003 

2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))))
2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Kanakaabhisheka"  Type = 1000  SevaID = 1004 

2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))))
2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Godhana"  Type = 1000  SevaID = 1005 

2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))))
2023-04-17 17:09:38.236 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Mahaa Pooja"  Type = 1000  SevaID = 1006 

2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))))
2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ksheeraabhisheka"  Type = 1000  SevaID = 1007 

2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))))
2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Madhu Abhisheka"  Type = 1000  SevaID = 1008 

2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))))
2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Yella Homagala Seva"  Type = 1000  SevaID = 1010 

2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))))
2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Naivedhya/Hasthodaka"  Type = 1000  SevaID = 1011 

2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))))
2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Phala - Panchaamrutha"  Type = 1000  SevaID = 1012 

2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))))
2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ganapathi Abhisheka"  Type = 1000  SevaID = 1013 

2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))))
2023-04-17 17:09:38.237 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nagadevara Abhisheka"  Type = 1000  SevaID = 1014 

2023-04-17 17:09:38.238 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))))
2023-04-17 17:09:38.238 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Navagraha Abhisheka"  Type = 1000  SevaID = 1015 

2023-04-17 17:09:38.238 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))))
2023-04-17 17:09:38.238 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Rathothsava"  Type = 1000  SevaID = 1016 

2023-04-17 17:09:38.239 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))))
2023-04-17 17:09:38.239 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Huggi Naivedhya"  Type = 1000  SevaID = 1017 

2023-04-17 17:09:38.239 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))))
2023-04-17 17:09:38.239 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pongal Naivedhya"  Type = 1000  SevaID = 1018 

2023-04-17 17:09:38.240 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))))
2023-04-17 17:09:38.240 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Grahana Shanthi"  Type = 1000  SevaID = 1019 

2023-04-17 17:09:38.240 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))))
2023-04-17 17:09:38.240 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Kaarthika - Rathothsava"  Type = 1000  SevaID = 1020 

2023-04-17 17:09:38.240 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))))
2023-04-17 17:09:38.240 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Kaarthika Seva"  Type = 1000  SevaID = 1021 

2023-04-17 17:09:38.240 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))))
2023-04-17 17:09:38.240 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sri Sathya Narayana Pooja"  Type = 1000  SevaID = 1022 

2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))))
2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Tulsi Archane"  Type = 1000  SevaID = 1023 

2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))))
2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Chataka Shraadha"  Type = 1000  SevaID = 1024 

2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))))
2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sankalpa Shraadha"  Type = 1000  SevaID = 1025 

2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))))
2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Vaahana Pooja"  Type = 1000  SevaID = 1026 

2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))))
2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Archane Seva"  Type = 1000  SevaID = 1027 

2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))))
2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Lakshmi Pooja"  Type = 1000  SevaID = 1028 

2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))))
2023-04-17 17:09:38.241 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Navagraha Devarige Thailaabhisheka"  Type = 1000  SevaID = 1029 

2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))))
2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pavamaana Homa"  Type = 1000  SevaID = 1030 

2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))))
2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Gana Homa"  Type = 1000  SevaID = 1031 

2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))))
2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Mruthyunjaya Homa"  Type = 1000  SevaID = 1032 

2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))))
2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Rudraabhisheka"  Type = 1000  SevaID = 1033 

2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))))
2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ondu Dinada Sampurna Seva"  Type = 2000  SevaID = 2001 

2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))))
2023-04-17 17:09:38.242 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ondu Dinada Anna Santharpane Seva"  Type = 2000  SevaID = 2002 

2023-04-17 17:09:38.243 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))))
2023-04-17 17:09:38.243 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Alankara Seva(Huvina Alankara)"  Type = 2000  SevaID = 2003 

2023-04-17 17:09:38.243 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))))
2023-04-17 17:09:38.243 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Alankara Seva"  Type = 2000  SevaID = 2004 

2023-04-17 17:09:38.243 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))(2004, SevaName(0x9276668))))
2023-04-17 17:09:38.243 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Noothana Vastra Seva"  Type = 2000  SevaID = 2005 

2023-04-17 17:09:38.243 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))(2004, SevaName(0x9276668))(2005, SevaName(0x9276938))))
2023-04-17 17:09:38.243 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sarva seva"  Type = 2000  SevaID = 2006 

2023-04-17 17:09:38.243 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))(2004, SevaName(0x9276668))(2005, SevaName(0x9276938))(2006, SevaName(0x92766b8))))
2023-04-17 17:09:38.243 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Kanakabhisheka Seva"  Type = 2000  SevaID = 2007 

2023-04-17 17:09:38.244 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))(2004, SevaName(0x9276668))(2005, SevaName(0x9276938))(2006, SevaName(0x92766b8))(2007, SevaName(0x92764d8))))
2023-04-17 17:09:38.244 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hasthodaka Seva(Prathidina)"  Type = 2000  SevaID = 2009 

2023-04-17 17:09:38.244 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))(2004, SevaName(0x9276668))(2005, SevaName(0x9276938))(2006, SevaName(0x92766b8))(2007, SevaName(0x92764d8))(2009, SevaName(0x9276618))))
2023-04-17 17:09:38.244 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "MahaPooje"  Type = 2000  SevaID = 2010 

2023-04-17 17:09:38.244 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))(2004, SevaName(0x9276668))(2005, SevaName(0x9276938))(2006, SevaName(0x92766b8))(2007, SevaName(0x92764d8))(2009, SevaName(0x9276618))(2010, SevaName(0x9276708))))
2023-04-17 17:09:38.244 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ashtothara Seva(Prathidina)"  Type = 2000  SevaID = 2011 

2023-04-17 17:09:38.244 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))(2004, SevaName(0x9276668))(2005, SevaName(0x9276938))(2006, SevaName(0x92766b8))(2007, SevaName(0x92764d8))(2009, SevaName(0x9276618))(2010, SevaName(0x9276708))(2011, SevaName(0x9276398))))
2023-04-17 17:09:38.244 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Paadakaradhane"  Type = 2000  SevaID = 2012 

2023-04-17 17:09:38.244 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))(2004, SevaName(0x9276668))(2005, SevaName(0x9276938))(2006, SevaName(0x92766b8))(2007, SevaName(0x92764d8))(2009, SevaName(0x9276618))(2010, SevaName(0x9276708))(2011, SevaName(0x9276398))(2012, SevaName(0x92767a8))))
2023-04-17 17:09:38.244 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "GanaHoma"  Type = 2000  SevaID = 2013 

2023-04-17 17:09:38.244 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))(2004, SevaName(0x9276668))(2005, SevaName(0x9276938))(2006, SevaName(0x92766b8))(2007, SevaName(0x92764d8))(2009, SevaName(0x9276618))(2010, SevaName(0x9276708))(2011, SevaName(0x9276398))(2012, SevaName(0x92767a8))(2013, SevaName(0x9276b68))))
2023-04-17 17:09:38.245 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PhalaPanchamrutha Seva"  Type = 2000  SevaID = 2014 

2023-04-17 17:09:38.245 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))(2004, SevaName(0x9276668))(2005, SevaName(0x9276938))(2006, SevaName(0x92766b8))(2007, SevaName(0x92764d8))(2009, SevaName(0x9276618))(2010, SevaName(0x9276708))(2011, SevaName(0x9276398))(2012, SevaName(0x92767a8))(2013, SevaName(0x9276b68))(2014, SevaName(0x92767f8))))
2023-04-17 17:09:38.245 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Benne pooje"  Type = 1  SevaID = 2015 

2023-04-17 17:09:38.245 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x9274488))), QMap((2, SevaName(0x9209d50))(3, SevaName(0x9209df0))(4, SevaName(0x92096c0))(6, SevaName(0x9209b20))(7, SevaName(0x92094e0))(18, SevaName(0x9265a50))(37, SevaName(0x9265320))(47, SevaName(0x9265730))(48, SevaName(0x9265820))(49, SevaName(0x92658c0))(75, SevaName(0x9275f68))(85, SevaName(0x9275a18))(86, SevaName(0x92760a8))(101, SevaName(0x92747a8))(103, SevaName(0x9274a28))(104, SevaName(0x92742f8))(108, SevaName(0x92743e8))(121, SevaName(0x9274348))(125, SevaName(0x9274528))(2015, SevaName(0x92763e8))), QMap((54, SevaName(0x9266090))(55, SevaName(0x9265f50))(56, SevaName(0x9265ff0))(57, SevaName(0x9266220))(58, SevaName(0x9265fa0))(59, SevaName(0x9265e10))(60, SevaName(0x92660e0))(61, SevaName(0x9266130))(62, SevaName(0x92661d0))(63, SevaName(0x9265cd0))(64, SevaName(0x9265e60))(65, SevaName(0x9265d20))(66, SevaName(0x9265eb0))(67, SevaName(0x9275e78))(68, SevaName(0x92758d8))(120, SevaName(0x9274bb8))), QMap((23, SevaName(0x9265af0))(24, SevaName(0x9265960))(25, SevaName(0x9265be0))(26, SevaName(0x9265a00))(27, SevaName(0x9265c30))(28, SevaName(0x9265aa0))(29, SevaName(0x9265910))(30, SevaName(0x9265690))(31, SevaName(0x92655a0))(34, SevaName(0x9265b40))(35, SevaName(0x9265b90))(36, SevaName(0x92652d0))(38, SevaName(0x9265780))(39, SevaName(0x92653c0))(40, SevaName(0x92654b0))(41, SevaName(0x9265870))(43, SevaName(0x92655f0))(44, SevaName(0x9265460))), QMap((12, SevaName(0x9209800))(13, SevaName(0x9209a30))(14, SevaName(0x9209a80))(70, SevaName(0x9275ce8))(71, SevaName(0x9275748))(72, SevaName(0x9275c98))(73, SevaName(0x92757e8))(76, SevaName(0x9275b08))), QMap((78, SevaName(0x9275888))(79, SevaName(0x9275ec8))(80, SevaName(0x9275ba8))), QMap((81, SevaName(0x9275bf8))(82, SevaName(0x9275928))(83, SevaName(0x9275978))(84, SevaName(0x92759c8))(89, SevaName(0x9275d38))), QMap((74, SevaName(0x9275838))(90, SevaName(0x9275d88))(91, SevaName(0x9275dd8))(92, SevaName(0x9275fb8))(93, SevaName(0x9275f18))(94, SevaName(0x9276058))(95, SevaName(0x9276008))(96, SevaName(0x92761e8))(97, SevaName(0x9276198))(98, SevaName(0x9276148))(99, SevaName(0x9276238))), QMap((16, SevaName(0x9265550))(17, SevaName(0x92659b0))(109, SevaName(0x9274c58))), QMap((5, SevaName(0x9209490))(10, SevaName(0x9209580))(19, SevaName(0x9265370))(46, SevaName(0x92656e0))(52, SevaName(0x9265dc0))(53, SevaName(0x9265d70))(110, SevaName(0x9274c08))(113, SevaName(0x9274b18))(123, SevaName(0x9274398))(127, SevaName(0x9274668))), QMap((50, SevaName(0x9266040))(112, SevaName(0x9274438))), QMap((9, SevaName(0x9209620))), QMap((11, SevaName(0x92097b0))), QMap((15, SevaName(0x9265c80))), QMap((20, SevaName(0x9265500))(111, SevaName(0x9274988))), QMap((42, SevaName(0x9265410))(51, SevaName(0x9265f00))(105, SevaName(0x9274938))(106, SevaName(0x92749d8))(124, SevaName(0x9274898))), QMap((45, SevaName(0x92657d0))(69, SevaName(0x9275ab8))(100, SevaName(0x9274758))(126, SevaName(0x9274618))), QMap((77, SevaName(0x9275798))), QMap((87, SevaName(0x9275a68))(88, SevaName(0x9275c48))), QMap((107, SevaName(0x92744d8))), QMap((114, SevaName(0x9274b68))(115, SevaName(0x9274a78))(116, SevaName(0x92747f8))(117, SevaName(0x9274ca8))(118, SevaName(0x9274848))(119, SevaName(0x92748e8))), QMap((122, SevaName(0x9274ac8))), QMap((1001, SevaName(0x92746b8))(1002, SevaName(0x9274708))(1003, SevaName(0x9275518))(1004, SevaName(0x9275568))(1005, SevaName(0x92756a8))(1006, SevaName(0x9275388))(1007, SevaName(0x9274de8))(1008, SevaName(0x9275658))(1010, SevaName(0x92753d8))(1011, SevaName(0x92755b8))(1012, SevaName(0x92752e8))(1013, SevaName(0x9274e38))(1014, SevaName(0x92754c8))(1015, SevaName(0x9275428))(1016, SevaName(0x9275608))(1017, SevaName(0x9275018))(1018, SevaName(0x92750b8))(1019, SevaName(0x9275478))(1020, SevaName(0x9274cf8))(1021, SevaName(0x9274d48))(1022, SevaName(0x9274e88))(1023, SevaName(0x9274ed8))(1024, SevaName(0x9274f28))(1025, SevaName(0x92751a8))(1026, SevaName(0x9275338))(1027, SevaName(0x9274f78))(1028, SevaName(0x9274fc8))(1029, SevaName(0x9275068))(1030, SevaName(0x9275108))(1031, SevaName(0x9275298))(1032, SevaName(0x9275158))(1033, SevaName(0x92751f8))), QMap((2001, SevaName(0x9276578))(2002, SevaName(0x9276b18))(2003, SevaName(0x92765c8))(2004, SevaName(0x9276668))(2005, SevaName(0x9276938))(2006, SevaName(0x92766b8))(2007, SevaName(0x92764d8))(2009, SevaName(0x9276618))(2010, SevaName(0x9276708))(2011, SevaName(0x9276398))(2012, SevaName(0x92767a8))(2013, SevaName(0x9276b68))(2014, SevaName(0x92767f8))))
2023-04-17 17:09:38.245 DBG default: bool DBInterface::querySevaNames() querying seva names done 

2023-04-17 17:09:38.245 DBG default: static SevaTypeNamesDataModel* SevaTypeNamesDataModel::self() SevaTypeNamesDataModel Object is returned 

2023-04-17 17:09:38.245 DBG default: UserManagement::UserManagement(QObject*) 

2023-04-17 17:09:38.245 DBG default: The role number recieved -1 

2023-04-17 17:09:38.245 DBG default: SevaDetailsTableView::SevaDetailsTableView(QObject*) 

2023-04-17 17:09:38.252 DBG default: AccountReportModel::AccountReportModel(QObject*) 

2023-04-17 17:09:38.252 DBG default: AccountReportDateRangeModel::AccountReportDateRangeModel(QObject*) 

2023-04-17 17:09:38.252 DBG default: AccountReportMonthWiseModel::AccountReportMonthWiseModel(QObject*) 

2023-04-17 17:09:38.252 DBG default: BookingReportDateRangeModel::BookingReportDateRangeModel(QObject*) 

2023-04-17 17:09:38.252 DBG default: BookingReportMonthWiseModel::BookingReportMonthWiseModel(QObject*) 

2023-04-17 17:09:38.252 DBG default: SevaBookingTableModel::SevaBookingTableModel(QObject*) 

2023-04-17 17:09:38.252 DBG default: SevaBookingSearchModel::SevaBookingSearchModel(QObject*) 

2023-04-17 17:09:38.252 DBG default: virtual QHash<int, QByteArray> SevaBookingTableModel::roleNames() const 

2023-04-17 17:09:38.252 DBG default: virtual QHash<int, QByteArray> SevaBookingTableModel::roleNames() const 

2023-04-17 17:09:38.252 DBG default: virtual QHash<int, QByteArray> SevaBookingTableModel::roleNames() const 

2023-04-17 17:09:38.252 DBG default: virtual QHash<int, QByteArray> SevaBookingTableModel::roleNames() const 

2023-04-17 17:09:38.252 DBG default: virtual QString SevaReceiptNumber::getNextReceiptNumber()  Date = 17  Mon = 4  Year = 2023
2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "1" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "2" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "3" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "3" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "3" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "4" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "4" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "4" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "5" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "5" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "5" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "6" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "6" 

2023-04-17 17:09:38.252 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "6" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "6" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "7" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "8" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "9" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "9" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "9" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "9" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "10" 

2023-04-17 17:09:38.253 WRN default: QSqlQuery::value: not positioned on a valid record
2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastReceiptNumber()  Size =  -1  receiptNo ID =  10  Value =  QVariant(Invalid) 

2023-04-17 17:09:38.253 DBG default: virtual QString SevaReceiptNumber::getNextReceiptNumber()  Last ReceiptNo from DB = 11  Generated = "2023_4_0011" 

2023-04-17 17:09:38.253 DBG default: QString SevaViewProxy::getNextReceiptNumber()  r number =  "2023_4_0011" 

2023-04-17 17:09:38.253 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-04-17 17:09:38.253 DBG default: BookingReportModel* SevaReport::bookingReportModel() const 

2023-04-17 17:09:38.253 DBG default: SevaCountOnDateModel::SevaCountOnDateModel(QObject*) 

2023-04-17 17:09:38.253 DBG default: saveVoucher::saveVoucher(QObject*) 

2023-04-17 17:09:38.253 DBG default: virtual QString VoucherNumber::getNextVoucherNumber() 

2023-04-17 17:09:38.253 DBG default: int DBInterface::getLastVoucherNumber() 

2023-04-17 17:09:38.253 DBG default: 752 

2023-04-17 17:09:38.253 DBG default: "753" 

2023-04-17 17:09:38.253 DBG default: VoucherReportModel::VoucherReportModel(QObject*) 

2023-04-17 17:09:38.253 DBG default: QString TrustListModel::getConfigLocation() 

2023-04-17 17:09:38.253 DBG default: QString TrustListModel::getDataLocation() 

2023-04-17 17:09:38.253 DBG qml: str1 = --D:/TempleFile/TempleRamMadirupdatingNew2023/bins/Config/Hubablli
2023-04-17 17:09:38.253 DBG qml: str2 = --D:/TempleFile/TempleRamMadirupdatingNew2023/bins/Data/Hubablli
2023-04-17 17:09:38.284 DBG qml: The Page Number=== 0
2023-04-17 17:09:38.284 DBG qml: The page number is 0
2023-04-17 17:09:38.284 DBG qml: SingleTon is created. Screen density  == 6.228183399741848
2023-04-17 17:09:38.284 DBG qml: Screen screenWidth size =1920
2023-04-17 17:09:38.284 DBG qml: Screen screenHeight size =1000
2023-04-17 17:09:38.284 WRN default: qrc:/ui/Login.qml:37:13: Unable to assign [undefined] to bool
2023-04-17 17:09:38.284 WRN default: qrc:/ui/Login.qml:44:13: Unable to assign [undefined] to bool
2023-04-17 17:09:38.284 WRN default: qrc:/ui/Login.qml:80:17: Unable to assign [undefined] to bool
2023-04-17 17:09:38.284 DBG default: int TrustListModel::getTrustListSize() 

2023-04-17 17:09:45.589 DBG default: void UserManagement::authorize(QString, QString) "admin" "admin123" 

2023-04-17 17:09:45.589 DBG qml: Credentials are correct
2023-04-17 17:09:45.589 DBG qml: Wrong credentials 0
2023-04-17 17:09:45.600 DBG qml: the accounts enable false
2023-04-17 17:09:45.600 DBG qml: SingleTon is created. Screen density  == 6.228183399741848
2023-04-17 17:09:45.600 DBG qml: Screen screenWidth size =1920
2023-04-17 17:09:45.600 DBG qml: Screen screenHeight size =1000
2023-04-17 17:09:45.600 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:09:45.600 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:09:45.600 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:09:45.600 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:09:45.600 DBG default: The role number is 1 

2023-04-17 17:09:45.600 DBG default: The role number recieved 1 

2023-04-17 17:09:46.804 DBG qml: admin button clicked
2023-04-17 17:09:46.804 DBG qml: Inside LoadLogin
2023-04-17 17:09:46.804 DBG qml: Inside LoadLogin count4
2023-04-17 17:09:46.811 DBG qml: The Page Number=== 4
2023-04-17 17:09:46.811 WRN default: qrc:/ui/Login.qml:70:9: QML Column: Cannot anchor to an item that isn't a parent or sibling.
2023-04-17 17:09:46.811 DBG qml: SingleTon is created. Screen density  == 6.228183399741848
2023-04-17 17:09:46.811 DBG qml: Screen screenWidth size =1920
2023-04-17 17:09:46.811 DBG qml: Screen screenHeight size =1000
2023-04-17 17:09:46.811 WRN default: qrc:/ui/MenuPage.qml:183:5: QML Connections: Detected function "onLoadUserManagement" in Connections element. This is probably intended to be a signal handler but no signal of the target matches the name.
2023-04-17 17:09:46.812 DBG qml: this is admin
2023-04-17 17:09:53.732 DBG default: void UserManagement::authorize(QString, QString) "admin" "admin123" 

2023-04-17 17:09:53.732 DBG qml: Credentials are correct
2023-04-17 17:09:53.732 WRN default: qrc:/ui/MenuPage.qml:162:5: QML Loader: Cannot anchor to an item that isn't a parent or sibling.
2023-04-17 17:09:53.733 DBG qml: Inside pcount 4
2023-04-17 17:09:53.739 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:09:53.739 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:09:53.739 DBG default: The role number is 1 

2023-04-17 17:09:53.739 DBG default: The role number recieved 1 

2023-04-17 17:09:54.372 DBG qml: User Management button clicked
2023-04-17 17:09:54.373 DBG qml: User Management loading
2023-04-17 17:09:54.390 DBG qml: focus changed
2023-04-17 17:09:54.392 DBG qml: focus changed
2023-04-17 17:09:54.393 WRN default: qrc:/ui/Admin/UserManagement.qml:142:5: QML Connections: Implicitly defined onFoo properties in Connections are deprecated. Use this syntax instead: function onFoo(<arguments>) { ... }
2023-04-17 17:09:56.372 DBG qml: loading Menu page from main
2023-04-17 17:09:56.377 DBG qml: the accounts enable true
2023-04-17 17:09:56.377 DBG qml: SingleTon is created. Screen density  == 6.228183399741848
2023-04-17 17:09:56.377 DBG qml: Screen screenWidth size =1920
2023-04-17 17:09:56.377 DBG qml: Screen screenHeight size =1000
2023-04-17 17:09:56.377 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:09:56.377 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:09:56.377 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:09:56.377 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:10:04.628 DBG qml: admin button clicked
2023-04-17 17:10:04.628 DBG qml: Inside LoadLogin
2023-04-17 17:10:04.628 DBG qml: Inside LoadLogin count4
2023-04-17 17:10:04.637 DBG qml: The Page Number=== 4
2023-04-17 17:10:04.637 WRN default: qrc:/ui/Login.qml:70:9: QML Column: Cannot anchor to an item that isn't a parent or sibling.
2023-04-17 17:10:04.637 DBG qml: SingleTon is created. Screen density  == 6.228183399741848
2023-04-17 17:10:04.637 DBG qml: Screen screenWidth size =1920
2023-04-17 17:10:04.637 DBG qml: Screen screenHeight size =1000
2023-04-17 17:10:04.637 WRN default: qrc:/ui/MenuPage.qml:183:5: QML Connections: Detected function "onLoadUserManagement" in Connections element. This is probably intended to be a signal handler but no signal of the target matches the name.
2023-04-17 17:10:04.637 DBG qml: this is admin
2023-04-17 17:10:11.884 DBG default: void UserManagement::authorize(QString, QString) "admin" "admin123" 

2023-04-17 17:10:11.884 DBG qml: Credentials are correct
2023-04-17 17:10:11.885 WRN default: qrc:/ui/MenuPage.qml:162:5: QML Loader: Cannot anchor to an item that isn't a parent or sibling.
2023-04-17 17:10:11.885 DBG qml: Inside pcount 4
2023-04-17 17:10:11.885 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:10:11.885 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-04-17 17:10:11.885 DBG default: The role number is 1 

2023-04-17 17:10:11.885 DBG default: The role number recieved 1 

2023-04-17 17:10:16.164 DBG qml: AddSeva button clicked
2023-04-17 17:10:16.164 DBG qml: Clicked on Admin
2023-04-17 17:10:16.198 DBG default: QAbstractItemModel* SevaViewProxy::getSevaTypeModel()  ############### 

2023-04-17 17:10:16.198 DBG default: bool SevaTypeViewModel::init() 

2023-04-17 17:10:16.198 DBG default: static SevaTypeNamesDataModel* SevaTypeNamesDataModel::self() SevaTypeNamesDataModel Object is returned 

2023-04-17 17:10:16.198 DBG default: bool SevaTypeViewModel::init()  Number of Seva Types = 25 

2023-04-17 17:10:16.198 WRN default: qrc:/ui/Admin/AdminPage.qml:60:9: QML Connections: Implicitly defined onFoo properties in Connections are deprecated. Use this syntax instead: function onFoo(<arguments>) { ... }
2023-04-17 17:10:16.198 WRN default: qrc:/ui/Admin/SevaNames/SevaNameEntry.qml:165:9: QML Connections: Implicitly defined onFoo properties in Connections are deprecated. Use this syntax instead: function onFoo(<arguments>) { ... }
2023-04-17 17:10:16.206 WRN default: qrc:/ui/Admin/SevaTypeEntryPage.qml:106:9: QML Connections: Implicitly defined onFoo properties in Connections are deprecated. Use this syntax instead: function onFoo(<arguments>) { ... }
2023-04-17 17:10:16.208 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.208 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.208 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.208 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.208 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 0 

2023-04-17 17:10:16.208 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.208 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 0 

2023-04-17 17:10:16.216 DBG qml: Admin Page is created........
2023-04-17 17:10:16.216 DBG qml: Component.onCompleted: of seva list view
2023-04-17 17:10:16.216 DBG qml:  List View is created.....944   height=882
2023-04-17 17:10:16.216 DBG qml: Seva Type =RAMANAVAMI SEVE
2023-04-17 17:10:16.216 DBG qml: Seva Type =RAMANAVAMI SEVE
2023-04-17 17:10:16.217 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.217 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.217 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.217 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 1 

2023-04-17 17:10:16.217 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.217 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 1 

2023-04-17 17:10:16.218 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.218 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.218 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.218 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 2 

2023-04-17 17:10:16.218 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.218 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 2 

2023-04-17 17:10:16.219 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.219 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.219 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.219 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 3 

2023-04-17 17:10:16.219 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.219 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 3 

2023-04-17 17:10:16.220 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.220 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.220 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.220 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 4 

2023-04-17 17:10:16.220 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.220 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 4 

2023-04-17 17:10:16.220 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.220 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.220 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.220 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 5 

2023-04-17 17:10:16.220 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.220 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 5 

2023-04-17 17:10:16.221 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.221 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.221 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.221 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 6 

2023-04-17 17:10:16.221 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.221 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 6 

2023-04-17 17:10:16.222 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.222 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.222 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.222 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 7 

2023-04-17 17:10:16.222 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.222 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 7 

2023-04-17 17:10:16.222 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.222 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.222 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.222 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 8 

2023-04-17 17:10:16.222 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.222 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 8 

2023-04-17 17:10:16.223 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.223 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.223 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.223 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 9 

2023-04-17 17:10:16.223 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.223 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 9 

2023-04-17 17:10:16.223 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.223 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.223 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.223 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 10 

2023-04-17 17:10:16.223 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.223 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 10 

2023-04-17 17:10:16.224 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.224 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.224 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.224 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 11 

2023-04-17 17:10:16.224 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.224 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 11 

2023-04-17 17:10:16.225 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.225 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.225 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.225 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 12 

2023-04-17 17:10:16.225 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.225 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 12 

2023-04-17 17:10:16.225 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.225 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.225 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.225 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 13 

2023-04-17 17:10:16.225 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.225 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 13 

2023-04-17 17:10:16.226 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.226 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.226 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.226 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 14 

2023-04-17 17:10:16.226 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.226 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 14 

2023-04-17 17:10:16.226 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.226 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.226 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.226 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 15 

2023-04-17 17:10:16.226 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.226 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 15 

2023-04-17 17:10:16.227 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.227 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.227 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.227 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 16 

2023-04-17 17:10:16.227 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.227 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 16 

2023-04-17 17:10:16.228 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.228 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.228 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.228 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 17 

2023-04-17 17:10:16.228 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.228 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 17 

2023-04-17 17:10:16.229 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.229 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.229 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.229 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 18 

2023-04-17 17:10:16.229 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.229 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 18 

2023-04-17 17:10:16.229 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.229 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.229 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.229 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 19 

2023-04-17 17:10:16.229 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.229 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 19 

2023-04-17 17:10:16.230 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.230 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.230 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.230 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 20 

2023-04-17 17:10:16.230 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.230 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 20 

2023-04-17 17:10:16.231 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.231 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.231 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.231 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 21 

2023-04-17 17:10:16.231 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.231 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 21 

2023-04-17 17:10:16.231 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.231 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.231 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.231 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 22 

2023-04-17 17:10:16.231 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.231 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 22 

2023-04-17 17:10:16.232 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.232 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.232 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.232 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 23 

2023-04-17 17:10:16.232 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.232 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 23 

2023-04-17 17:10:16.232 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.232 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.232 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.232 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 24 

2023-04-17 17:10:16.232 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  25 

2023-04-17 17:10:16.232 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 24 

2023-04-17 17:10:18.358 WRN default: Qt Quick Layouts: Polish loop detected. Aborting after two iterations.
2023-04-17 17:10:18.358 WRN default: Qt Quick Layouts: Polish loop detected. Aborting after two iterations.
2023-04-17 17:10:18.358 WRN default: Qt Quick Layouts: Polish loop detected. Aborting after two iterations.
2023-04-17 17:10:18.358 WRN default: Qt Quick Layouts: Polish loop detected. Aborting after two iterations.
2023-04-17 17:10:20.876 DBG qml:  Current Index changed1
2023-04-17 17:10:20.876 DBG qml: Seva Type =REGULAR
2023-04-17 17:10:20.877 DBG qml: Seva Type =REGULAR
2023-04-17 17:10:30.992 DBG qml:  LineTxt Input Edit is complete
2023-04-17 17:10:30.992 DBG qml:  RowEntry - Edit is completet
2023-04-17 17:10:34.725 DBG qml:  LineTxt Input Edit is complete
2023-04-17 17:10:34.725 DBG qml:  RowEntry - Edit is completet
2023-04-17 17:10:38.021 DBG qml:  LineTxt Input Edit is complete
2023-04-17 17:10:38.021 DBG qml:  RowEntry - Edit is completet
2023-04-17 17:10:45.933 DBG qml:  LineTxt Input Edit is complete
2023-04-17 17:10:45.933 DBG qml:  RowEntry - Edit is completet
2023-04-17 17:10:58.085 DBG qml:  LineTxt Input Edit is complete
2023-04-17 17:10:58.085 DBG qml:  RowEntry - Edit is completet
2023-04-17 17:11:00.349 DBG qml:  LineTxt Input Edit is complete
2023-04-17 17:11:00.349 DBG qml:  RowEntry - Edit is completet
2023-04-17 17:11:11.365 DBG qml:  LineTxt Input Edit is complete
2023-04-17 17:11:11.365 DBG qml:  RowEntry - Edit is completet
2023-04-17 17:11:11.452 DBG qml: SevaNameEntry.qml - Addclicked
2023-04-17 17:11:11.452 DBG default: QString SevaViewProxy::createNewSeva(SevaName*) "Benne Pooja" 2016 30514 2500 "17-04-2023" 1 2500 1 "9:00 AM"
2023-04-17 17:11:11.452 DBG default: void SevaName::print()  Seva Name   = "Benne Pooja"
2023-04-17 17:11:11.452 DBG default: void SevaName::print()  Seva ID     = 2016
2023-04-17 17:11:11.452 DBG default: void SevaName::print()  Seva Number = 30514
2023-04-17 17:11:11.452 DBG default: void SevaName::print()  Seva        = 2500
2023-04-17 17:11:11.452 DBG default: void SevaName::print()  Seva Date   = "17-04-2023"
2023-04-17 17:11:11.453 DBG default: void SevaName::print()  Seva Type   = 1
2023-04-17 17:11:11.453 DBG default: void SevaName::print()  Seva Cost   = 2500
2023-04-17 17:11:11.453 DBG default: void SevaName::print()  Seva Count  = 1
2023-04-17 17:11:11.453 DBG default: void SevaName::print()  Additional Cost = 0
2023-04-17 17:11:11.453 DBG default: void SevaName::print()  Seva Time  = "9:00 AM"
2023-04-17 17:11:11.453 DBG default: bool DBInterface::createSeva(SevaName*) Request add. Seva Name =  "Benne Pooja"  sevaId=  2016 

2023-04-17 17:11:11.469 DBG default: bool DBInterface::createSeva(SevaName*) **** Seva Name = "Benne Pooja"  Added successfully  

2023-04-17 17:11:12.867 DBG qml: Ok clicked
2023-04-17 17:11:13.676 DBG qml: Ok clicked
2023-04-17 17:11:52.736 DBG default: virtual SevaName::~SevaName()  Seva Object is getting destroyed  

