2023-07-20 16:56:44.083 WRN default: Invalid QML element name " AccReportDateRangeElement"
2023-07-20 16:56:44.083 WRN default: Invalid QML element name " AccReportMonthRangeElement"
2023-07-20 16:56:44.083 WRN default: Invalid QML element name " BookingReportDateRangeElement"
2023-07-20 16:56:44.083 WRN default: Invalid QML element name " BookingReportMonthRangeElement"
2023-07-20 16:56:44.084 DBG default: static TrustListModel* TrustListModel::getTrustListModelInstance() 

2023-07-20 16:56:44.084 DBG default: static TrustListModel* TrustListModel::getTrustListModelInstance() In static getTrustListModelInstance of TrustListModel inside if 

2023-07-20 16:56:44.084 DBG default: TrustListModel::TrustListModel() 

2023-07-20 16:56:44.084 DBG default: void TrustListModel::init() 

2023-07-20 16:56:44.084 DBG default: TrustConfiguration::TrustConfiguration(QObject*) 

2023-07-20 16:56:44.085 DBG default: void TrustConfiguration::readTrustsFromJsonToList() path  "/home/ubuntuhp/Temple_suman/Temple_12_7_2023_Devotee/Temple-main/bins" 

2023-07-20 16:56:44.085 DBG default: file opened 

2023-07-20 16:56:44.085 DBG default: read all 

2023-07-20 16:56:44.085 DBG default: void TrustConfiguration::readTrustsFromJsonToList() dddddddoooooooooooocccccccc 

2023-07-20 16:56:44.085 DBG default: Trust::Trust(QObject*) 

2023-07-20 16:56:44.157 DBG qml: SingleTon is created. Screen density  == 6.210244392366923
2023-07-20 16:56:44.157 DBG qml: Screen screenWidth size =1920
2023-07-20 16:56:44.157 DBG qml: Screen screenHeight size =1000
2023-07-20 16:56:44.159 DBG qml: screen height= 1080
2023-07-20 16:56:44.159 DBG qml: screen width= 1920
2023-07-20 16:56:44.159 DBG qml: Screen MyStyles-screecnWidth size =1920
2023-07-20 16:56:44.159 DBG qml: Screen MyStyles-screenHeight size =1000
2023-07-20 16:56:44.160 DBG qml: screen density  == 6.210244392366923
2023-07-20 16:56:44.160 DBG qml: SingleTon is created. Screen density  == 6.210244392366923
2023-07-20 16:56:44.160 DBG qml: Screen screenWidth size =1920
2023-07-20 16:56:44.160 DBG qml: Screen screenHeight size =1000
2023-07-20 16:56:49.179 DBG default: int TrustListModel::getTrustListSize() 

2023-07-20 16:56:49.179 DBG default: int TrustListModel::getTrustListSize() 

2023-07-20 16:56:49.179 DBG qml: in else--------------
2023-07-20 16:56:49.179 DBG qml: in else------trustName--------Hubablli
2023-07-20 16:56:49.179 DBG qml: in else-------trustCode-------Hubablli
2023-07-20 16:56:49.179 DBG default: void TrustListModel::setCurrentConfigLocation(const QString&) 

2023-07-20 16:56:49.180 DBG default: void TrustListModel::setCurrentConfigLocation(const QString&) m_currentConfigLocation  "/home/ubuntuhp/Temple_suman/Temple_12_7_2023_Devotee/Temple-main/bins/Config/Hubablli" 

2023-07-20 16:56:49.180 DBG default: Inside lamda 

2023-07-20 16:56:49.180 DBG default: void TrustListModel::setCurrentDataLocation(const QString&) 

2023-07-20 16:56:49.180 DBG default: void TrustListModel::setCurrentDataLocation(const QString&) m_currentDataLocation  "/home/ubuntuhp/Temple_suman/Temple_12_7_2023_Devotee/Temple-main/bins/Data/Hubablli" 

2023-07-20 16:56:49.180 DBG default: Inside lamda 

2023-07-20 16:56:49.180 DBG default: QString TrustListModel::getConfigLocation() 

2023-07-20 16:56:49.180 DBG default: void ConfigureApp::loadXMLFile() "123.jpg"
2023-07-20 16:56:49.180 DBG default: void ConfigureApp::loadXMLFile() "123.jpg"
2023-07-20 16:56:49.180 DBG default: Creating the DataBase Connection  

2023-07-20 16:56:49.182 DBG default: static TrustListModel* TrustListModel::getTrustListModelInstance() 

2023-07-20 16:56:49.182 DBG default: QString TrustListModel::getDataLocation() 

2023-07-20 16:56:49.182 DBG default: DBInterface::DBInterface(QObject*) ******************* DB "/home/ubuntuhp/Temple_suman/Temple_12_7_2023_Devotee/Temple-main/bins/Data/Hubablli/nseva.db" 

2023-07-20 16:56:49.182 DBG default: Database is opened  "/home/ubuntuhp/Temple_suman/Temple_12_7_2023_Devotee/Temple-main/bins/Data/Hubablli/nseva.db" 

2023-07-20 16:56:49.183 DBG default: Sevabboking table not created
2023-07-20 16:56:49.183 DBG default: person details creation failed
2023-07-20 16:56:49.183 DBG default: SevaTypeJsonProcessor::SevaTypeJsonProcessor(QObject*) 

2023-07-20 16:56:49.183 DBG default: void SevaTypeJsonProcessor::readSevaTypeFromJsonFormate() 

2023-07-20 16:56:49.183 DBG default: static TrustListModel* TrustListModel::getTrustListModelInstance() 

2023-07-20 16:56:49.183 DBG default: QString TrustListModel::getConfigLocation() 

2023-07-20 16:56:49.184 DBG default: file opened 

2023-07-20 16:56:49.184 DBG default: read all 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevaTypeFromJsonFormate()  m_sevaTypeList.append(st); 

2023-07-20 16:56:49.184 DBG default: bool DBInterface::add_seva_type(SevaType*)  Seva Type Requested to Add =  23 

2023-07-20 16:56:49.184 DBG default: bool DBInterface::add_seva_type(SevaType*)  Seva Type in DB = 23 

2023-07-20 16:56:49.184 WRN default: bool DBInterface::add_seva_type(SevaType*)  Seva Type with ID =  23 already exist in DB 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevaTypeFromJsonFormate()  m_sevaTypeList.append(st); 

2023-07-20 16:56:49.184 DBG default: bool DBInterface::add_seva_type(SevaType*)  Seva Type Requested to Add =  24 

2023-07-20 16:56:49.184 DBG default: bool DBInterface::add_seva_type(SevaType*)  Seva Type in DB = 24 

2023-07-20 16:56:49.184 WRN default: bool DBInterface::add_seva_type(SevaType*)  Seva Type with ID =  24 already exist in DB 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::printSevaTypeNames() 

2023-07-20 16:56:49.184 DBG default: 23 :  "Regular Seva" , 23 , "Raj" 

2023-07-20 16:56:49.184 DBG default: 24 :  "Aradhana Seva" , 24 , "Abhi" 

2023-07-20 16:56:49.184 DBG default: void DBInterface::readSevaNamesFromJson() 

2023-07-20 16:56:49.184 DBG default: void DBInterface::readSevaNamesFromJson() 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 

2023-07-20 16:56:49.184 DBG default: static TrustListModel* TrustListModel::getTrustListModelInstance() 

2023-07-20 16:56:49.184 DBG default: QString TrustListModel::getConfigLocation() 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  path "/home/ubuntuhp/Temple_suman/Temple_12_7_2023_Devotee/Temple-main/bins/Config/Hubablli/SevaNames.json" 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() file opened 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() read all 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Udayaasthamaana Seva" 

2023-07-20 16:56:49.184 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.184 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1001 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Sarva Seva" 

2023-07-20 16:56:49.184 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.184 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1002 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.184 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Sarva Samarpana Seva" 

2023-07-20 16:56:49.185 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.185 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1003 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Kanakaabhisheka" 

2023-07-20 16:56:49.185 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.185 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1004 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Godhana" 

2023-07-20 16:56:49.185 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.185 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1005 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Mahaa Pooja" 

2023-07-20 16:56:49.185 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.185 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1006 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Ksheeraabhisheka" 

2023-07-20 16:56:49.185 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.185 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1007 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Madhu Abhisheka" 

2023-07-20 16:56:49.185 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.185 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1008 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Yella Homagala Seva" 

2023-07-20 16:56:49.185 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.185 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1010 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Naivedhya/Hasthodaka" 

2023-07-20 16:56:49.185 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.185 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1011 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Phala - Panchaamrutha" 

2023-07-20 16:56:49.185 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.185 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1012 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Ganapathi Abhisheka" 

2023-07-20 16:56:49.185 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.185 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1013 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Nagadevara Abhisheka" 

2023-07-20 16:56:49.185 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.185 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1014 

2023-07-20 16:56:49.185 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Navagraha Abhisheka" 

2023-07-20 16:56:49.186 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.186 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1015 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Rathothsava" 

2023-07-20 16:56:49.186 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.186 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1016 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Huggi Naivedhya" 

2023-07-20 16:56:49.186 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.186 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1017 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Pongal Naivedhya" 

2023-07-20 16:56:49.186 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.186 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1018 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Grahana Shanthi" 

2023-07-20 16:56:49.186 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.186 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1019 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Kaarthika - Rathothsava" 

2023-07-20 16:56:49.186 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.186 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1020 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Kaarthika Seva" 

2023-07-20 16:56:49.186 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.186 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1021 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Sri Sathya Narayana Pooja" 

2023-07-20 16:56:49.186 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.186 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1022 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Tulsi Archane" 

2023-07-20 16:56:49.186 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.186 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1023 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Chataka Shraadha" 

2023-07-20 16:56:49.186 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.186 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1024 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Sankalpa Shraadha" 

2023-07-20 16:56:49.186 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.186 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.186 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1025 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Vaahana Pooja" 

2023-07-20 16:56:49.187 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.187 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1026 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Archane Seva" 

2023-07-20 16:56:49.187 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.187 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1027 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Lakshmi Pooja" 

2023-07-20 16:56:49.187 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.187 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1028 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Navagraha Devarige Thailaabhisheka" 

2023-07-20 16:56:49.187 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.187 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1029 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Pavamaana Homa" 

2023-07-20 16:56:49.187 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.187 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1030 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Gana Homa" 

2023-07-20 16:56:49.187 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.187 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1031 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Mruthyunjaya Homa" 

2023-07-20 16:56:49.187 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.187 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1032 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Rudraabhisheka" 

2023-07-20 16:56:49.187 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.187 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  1033 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Ondu Dinada Sampurna Seva" 

2023-07-20 16:56:49.187 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.187 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2001 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Ondu Dinada Anna Santharpane Seva" 

2023-07-20 16:56:49.187 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.187 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2002 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.187 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Alankara Seva(Huvina Alankara)" 

2023-07-20 16:56:49.187 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.187 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2003 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Alankara Seva" 

2023-07-20 16:56:49.188 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.188 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2004 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Noothana Vastra Seva" 

2023-07-20 16:56:49.188 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.188 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2005 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Sarva seva" 

2023-07-20 16:56:49.188 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.188 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2006 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Kanakabhisheka Seva" 

2023-07-20 16:56:49.188 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.188 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2007 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Hasthodaka Seva(Prathidina)" 

2023-07-20 16:56:49.188 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.188 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2009 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "MahaPooje" 

2023-07-20 16:56:49.188 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.188 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2010 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Ashtothara Seva(Prathidina)" 

2023-07-20 16:56:49.188 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.188 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2011 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "Paadakaradhane" 

2023-07-20 16:56:49.188 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.188 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2012 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "GanaHoma" 

2023-07-20 16:56:49.188 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.188 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2013 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  number string =  1 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  SevaName string =  "PhalaPanchamrutha Seva" 

2023-07-20 16:56:49.188 DBG default: void SevaName::setAdditionalCost(int)  Seva additionalCost=   0 

2023-07-20 16:56:49.188 DBG default: void SevaName::setCount(int)  Seva count=   5 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate()  sevaID string =  2014 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() 11 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::readSevasFromJsonFormate() continue flag1 

2023-07-20 16:56:49.188 DBG default: void DBInterface::readSevaNamesFromJson() 

2023-07-20 16:56:49.188 DBG default: void SevaTypeJsonProcessor::printSevasNames() 

2023-07-20 16:56:49.189 DBG default: void DBInterface::readSevaNamesFromJson() 

2023-07-20 16:56:49.189 DBG default: Creating the SevaTypeNamesDataModel  

2023-07-20 16:56:49.189 DBG default: SevaBookingConformationDataModel::SevaBookingConformationDataModel(QObject*) 

2023-07-20 16:56:49.189 DBG default: JsonWriter::JsonWriter(QObject*) 

2023-07-20 16:56:49.189 DBG default: SevaTypeNamesDataModel::SevaTypeNamesDataModel(QObject*) 

2023-07-20 16:56:49.189 DBG default: void SevaTypeNamesDataModel::connectSignals() 

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::querySevaTypes() 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 1 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 2 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 3 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 4 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 5 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 6 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 7 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 8 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 9 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 10 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 11 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 12 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 13 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 14 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 15 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 16 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 17 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 18 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 19 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 20 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 21 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 22 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 23 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while ---before if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() Inside while --- after if------ querying seva type  

2023-07-20 16:56:49.189 DBG default: bool SevaTypeNamesDataModel::processSevaTypes(SevaType*)  Inserting Seva  Type = 24 

2023-07-20 16:56:49.189 DBG default: bool DBInterface::querySevaType() querying seva type done 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::querySevaNames() 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Chataka"  Type = 1  SevaID = 2 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hasthodaka"  Type = 1  SevaID = 3 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Dwadashi Hasthodaka"  Type = 1  SevaID = 4 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Grahana Shanthi Homa"  Type = 9  SevaID = 5 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))), QMap((5, SevaName(0x55d1a95197f0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Panchamrutha/Abhisheka"  Type = 1  SevaID = 6 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))), QMap((5, SevaName(0x55d1a95197f0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Samanya Kanike"  Type = 1  SevaID = 7 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))), QMap((5, SevaName(0x55d1a95197f0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Shop Kanike"  Type = 11  SevaID = 9 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))), QMap((5, SevaName(0x55d1a95197f0))), QMap((9, SevaName(0x55d1a9517e00))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nithya thaila seva"  Type = 9  SevaID = 10 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))), QMap((9, SevaName(0x55d1a9517e00))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Building Fund"  Type = 12  SevaID = 11 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Alankar Pankthi"  Type = 4  SevaID = 12 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))), QMap((12, SevaName(0x55d1a9517800))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Aradhna Kanike"  Type = 4  SevaID = 13 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Annadhana "  Type = 4  SevaID = 14 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hundi Collections"  Type = 13  SevaID = 15 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Khara Huggi"  Type = 8  SevaID = 16 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sweet Huggi"  Type = 8  SevaID = 17 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Thatte Hasthodaka"  Type = 1  SevaID = 18 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Advance Recovered"  Type = 9  SevaID = 19 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PP - Rent"  Type = 14  SevaID = 20 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Sampoorna Annadana Seva"  Type = 3  SevaID = 23 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Pavamana Homa"  Type = 3  SevaID = 24 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Pavamana Homa Sankalp"  Type = 3  SevaID = 25 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Pravachna Seva-All days"  Type = 3  SevaID = 26 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Pravachana seva- 1 day"  Type = 3  SevaID = 27 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami  Annadana Sankalpa Seva"  Type = 3  SevaID = 28 

2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.190 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Hoovina Alankara seva"  Type = 3  SevaID = 29 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navmi Sarva seva"  Type = 3  SevaID = 30 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Sumadhwavijaya Parayana seva"  Type = 3  SevaID = 31 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Prakarosthava"  Type = 3  SevaID = 34 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Sampoorna Seva"  Type = 3  SevaID = 35 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Gruha Padapooja"  Type = 3  SevaID = 36 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Serva Seva"  Type = 1  SevaID = 37 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Kanike"  Type = 3  SevaID = 38 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Annadana seva "  Type = 3  SevaID = 39 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Pandith Sanman"  Type = 3  SevaID = 40 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M  Navami Panchamurtha "  Type = 3  SevaID = 41 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Navagraha Shanthi Homa"  Type = 15  SevaID = 42 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Padapooja"  Type = 3  SevaID = 43 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "M Navami Madhu Abhiseka"  Type = 3  SevaID = 44 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Gopaladasara Aradhane"  Type = 16  SevaID = 45 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Additional Sweets"  Type = 9  SevaID = 46 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hoovina alankara Seva"  Type = 1  SevaID = 47 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Prasada Seve"  Type = 1  SevaID = 48 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Chataka- 2 Hasthodaka"  Type = 1  SevaID = 49 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sathyanarayana Pooje"  Type = 10  SevaID = 50 

2023-07-20 16:56:49.191 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "AYUSH HOMA"  Type = 15  SevaID = 51 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "THAILA ABHYANJANA"  Type = 9  SevaID = 52 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nuthana Vastra Dharana"  Type = 9  SevaID = 53 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PANAKA KOSAMBARI  SAMPOORNA SEVE"  Type = 2  SevaID = 54 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PANAKA KOSAMBARI SANKLAPA SEVE"  Type = 2  SevaID = 55 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "SRI RAMA TARAKA HOMA"  Type = 2  SevaID = 56 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "SRI RAMA TARAKA HOMA SANKALPA"  Type = 2  SevaID = 57 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "SITA RAMA KALYANOTSVA"  Type = 2  SevaID = 58 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "SRI SITA RAMA KALYANOTSAVA SANKALPAA"  Type = 2  SevaID = 59 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PRATIDINA PRAVACHANA SEVE "  Type = 2  SevaID = 60 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "YELLA DINAGALA PRAVACHANA SEVE"  Type = 2  SevaID = 61 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "HOOVINA ALANKARA"  Type = 2  SevaID = 62 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi"  Type = 2  SevaID = 63 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PRATIDINA SANJE PRASADA SEVE"  Type = 2  SevaID = 64 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "VISHESHA PANCHAMRUTA"  Type = 2  SevaID = 65 

2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.192 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PRAKAROTSVA"  Type = 2  SevaID = 66 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "THAILABYAJANA SEVE"  Type = 2  SevaID = 67 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "ARCHANE"  Type = 2  SevaID = 68 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Raghavendra Swamy Aradhane"  Type = 16  SevaID = 69 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Abhisheka Madhu/Panchamrutha"  Type = 4  SevaID = 70 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ashtottara"  Type = 4  SevaID = 71 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hoovina Alankara"  Type = 4  SevaID = 72 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Prakarothsava"  Type = 4  SevaID = 73 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Deepalankarana Seve"  Type = 7  SevaID = 74 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Tarakari Seve"  Type = 1  SevaID = 75 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Dhanya Seva"  Type = 4  SevaID = 76 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Bhiksha kanike"  Type = 18  SevaID = 77 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "hastodaka P P"  Type = 5  SevaID = 78 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Chataka P P"  Type = 5  SevaID = 79 

2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))))
2023-07-20 16:56:49.193 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sankalpa  P P"  Type = 5  SevaID = 80 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Thaila Nanda Deepa for 9 days"  Type = 6  SevaID = 81 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Grutha Nanda Deepa for  9 days"  Type = 6  SevaID = 82 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Thaila Deepa for 1 day"  Type = 6  SevaID = 83 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Grutha Deepa for 1 day"  Type = 6  SevaID = 84 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Dhanya Seve"  Type = 1  SevaID = 85 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Annadana Kanike"  Type = 1  SevaID = 86 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pravachana"  Type = 19  SevaID = 87 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pravachana for one day"  Type = 19  SevaID = 88 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pravachana Seva for one day"  Type = 6  SevaID = 89 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nitya Deepaseve"  Type = 7  SevaID = 90 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Thaila Abhyanjana"  Type = 7  SevaID = 91 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nuthana Vastra Dharane Seve"  Type = 7  SevaID = 92 

2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.194 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Laksha Deepostava"  Type = 7  SevaID = 93 

2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nuthana Vastra Dharane Pratyekavagi "  Type = 7  SevaID = 94 

2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Tulasi Damodara Vivaha sankalpa"  Type = 7  SevaID = 95 

2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Dhatri Havana Sampoorna Seve "  Type = 7  SevaID = 96 

2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Dhatri Havana Sankalpa Seve "  Type = 7  SevaID = 97 

2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Vishesha Hoovina Alankara "  Type = 7  SevaID = 98 

2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Vishesha Panchamrutha Abhisheka "  Type = 7  SevaID = 99 

2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Vijaya Dasara Aradhane"  Type = 16  SevaID = 100 

2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Prakarotsva"  Type = 1  SevaID = 101 

2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nithya Archane"  Type = 0  SevaID = 102 

2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nithya Archane"  Type = 1  SevaID = 103 

2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.195 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ashtotthara Kanike"  Type = 1  SevaID = 104 

2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Santhana Gopala Krishna Homa"  Type = 15  SevaID = 105 

2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pavamana Homa"  Type = 15  SevaID = 106 

2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))))
2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Shashwatha Seva Pooje"  Type = 20  SevaID = 107 

2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))))
2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hasthodaka Regular"  Type = 1  SevaID = 108 

2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))))
2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Huggi Seva"  Type = 8  SevaID = 109 

2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))))
2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Mosaranna Naivedya"  Type = 9  SevaID = 110 

2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))))
2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Poorna Pragna Hall Kanike"  Type = 14  SevaID = 111 

2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))), QMap((50, SevaName(0x55d1a99937b0))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))))
2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pratyeka Sathyanarayana Pooja"  Type = 10  SevaID = 112 

2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))))
2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Chikka Adige"  Type = 9  SevaID = 113 

2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))))
2023-07-20 16:56:49.196 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Vishesha Panchamrutha"  Type = 21  SevaID = 114 

2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))))
2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Thaila Abhyanjan seve"  Type = 21  SevaID = 115 

2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))))
2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sri SeethaRamanjaneyarige Nuthana Vastra Dharane pratidevarige."  Type = 21  SevaID = 116 

2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))))
2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Prakarothsava"  Type = 21  SevaID = 117 

2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))))
2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Archane"  Type = 21  SevaID = 118 

2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))))
2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hoovina Alankara seve"  Type = 21  SevaID = 119 

2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))))
2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ramanavami Kanike"  Type = 2  SevaID = 120 

2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))))
2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Villeydhele Hara"  Type = 1  SevaID = 121 

2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))))
2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Gandha Lepana "  Type = 22  SevaID = 122 

2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))))
2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Phalahara Pooja"  Type = 9  SevaID = 123 

2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))))
2023-07-20 16:56:49.197 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "GanaHoma"  Type = 15  SevaID = 124 

2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))))
2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hasthodaka Monthly"  Type = 1  SevaID = 125 

2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))))
2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Jayathirtha Aradhane Kanike"  Type = 16  SevaID = 126 

2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))))
2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Oldarticals sold"  Type = 9  SevaID = 127 

2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))))
2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Udayaasthamaana Seva"  Type = 23  SevaID = 128 

2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))))
2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sarva Seva"  Type = 23  SevaID = 129 

2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))))
2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sarva Samarpana Seva"  Type = 23  SevaID = 130 

2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))))
2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Kanakaabhisheka"  Type = 23  SevaID = 131 

2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))))
2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Godhana"  Type = 23  SevaID = 132 

2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))))
2023-07-20 16:56:49.198 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Mahaa Pooja"  Type = 23  SevaID = 133 

2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))))
2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ksheeraabhisheka"  Type = 23  SevaID = 134 

2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))))
2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Madhu Abhisheka"  Type = 23  SevaID = 135 

2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))))
2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Yella Homagala Seva"  Type = 23  SevaID = 136 

2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))))
2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Naivedhya/Hasthodaka"  Type = 23  SevaID = 137 

2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))))
2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Phala - Panchaamrutha"  Type = 23  SevaID = 138 

2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))))
2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ganapathi Abhisheka"  Type = 23  SevaID = 139 

2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))))
2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Nagadevara Abhisheka"  Type = 23  SevaID = 140 

2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))))
2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Navagraha Abhisheka"  Type = 23  SevaID = 141 

2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))))
2023-07-20 16:56:49.199 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Rathothsava"  Type = 23  SevaID = 142 

2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))))
2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Huggi Naivedhya"  Type = 23  SevaID = 143 

2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))))
2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pongal Naivedhya"  Type = 23  SevaID = 144 

2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))))
2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Grahana Shanthi"  Type = 23  SevaID = 145 

2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))))
2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Kaarthika - Rathothsava"  Type = 23  SevaID = 146 

2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))))
2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Kaarthika Seva"  Type = 23  SevaID = 147 

2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))))
2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sri Sathya Narayana Pooja"  Type = 23  SevaID = 148 

2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))))
2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Tulsi Archane"  Type = 23  SevaID = 149 

2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))))
2023-07-20 16:56:49.200 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Chataka Shraadha"  Type = 23  SevaID = 150 

2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))))
2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sankalpa Shraadha"  Type = 23  SevaID = 151 

2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))))
2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Vaahana Pooja"  Type = 23  SevaID = 152 

2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))))
2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Archane Seva"  Type = 23  SevaID = 153 

2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))))
2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Lakshmi Pooja"  Type = 23  SevaID = 154 

2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))))
2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Navagraha Devarige Thailaabhisheka"  Type = 23  SevaID = 155 

2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))))
2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Pavamaana Homa"  Type = 23  SevaID = 156 

2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))))
2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Gana Homa"  Type = 23  SevaID = 157 

2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))))
2023-07-20 16:56:49.201 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Mruthyunjaya Homa"  Type = 23  SevaID = 158 

2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))))
2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Rudraabhisheka"  Type = 23  SevaID = 159 

2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))))
2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ondu Dinada Sampurna Seva"  Type = 24  SevaID = 160 

2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))))
2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ondu Dinada Anna Santharpane Seva"  Type = 24  SevaID = 161 

2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))))
2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Alankara Seva(Huvina Alankara)"  Type = 24  SevaID = 162 

2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))))
2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Alankara Seva"  Type = 24  SevaID = 163 

2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))))
2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Noothana Vastra Seva"  Type = 24  SevaID = 164 

2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))))
2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Sarva seva"  Type = 24  SevaID = 165 

2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))(165, SevaName(0x55d1a99c26a0))))
2023-07-20 16:56:49.202 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Kanakabhisheka Seva"  Type = 24  SevaID = 166 

2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))(165, SevaName(0x55d1a99c26a0))(166, SevaName(0x55d1a99c1220))))
2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Hasthodaka Seva(Prathidina)"  Type = 24  SevaID = 167 

2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))(165, SevaName(0x55d1a99c26a0))(166, SevaName(0x55d1a99c1220))(167, SevaName(0x55d1a99c2e80))))
2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "MahaPooje"  Type = 24  SevaID = 168 

2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))(165, SevaName(0x55d1a99c26a0))(166, SevaName(0x55d1a99c1220))(167, SevaName(0x55d1a99c2e80))(168, SevaName(0x55d1a99c3660))))
2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Ashtothara Seva(Prathidina)"  Type = 24  SevaID = 169 

2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))(165, SevaName(0x55d1a99c26a0))(166, SevaName(0x55d1a99c1220))(167, SevaName(0x55d1a99c2e80))(168, SevaName(0x55d1a99c3660))(169, SevaName(0x55d1a99c3870))))
2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Paadakaradhane"  Type = 24  SevaID = 170 

2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))(165, SevaName(0x55d1a99c26a0))(166, SevaName(0x55d1a99c1220))(167, SevaName(0x55d1a99c2e80))(168, SevaName(0x55d1a99c3660))(169, SevaName(0x55d1a99c3870))(170, SevaName(0x55d1a99c15a0))))
2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "GanaHoma"  Type = 24  SevaID = 171 

2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))(165, SevaName(0x55d1a99c26a0))(166, SevaName(0x55d1a99c1220))(167, SevaName(0x55d1a99c2e80))(168, SevaName(0x55d1a99c3660))(169, SevaName(0x55d1a99c3870))(170, SevaName(0x55d1a99c15a0))(171, SevaName(0x55d1a99a89a0))))
2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "PhalaPanchamrutha Seva"  Type = 24  SevaID = 172 

2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))(165, SevaName(0x55d1a99c26a0))(166, SevaName(0x55d1a99c1220))(167, SevaName(0x55d1a99c2e80))(168, SevaName(0x55d1a99c3660))(169, SevaName(0x55d1a99c3870))(170, SevaName(0x55d1a99c15a0))(171, SevaName(0x55d1a99a89a0))(172, SevaName(0x55d1a99c4600))))
2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "ChatakaN"  Type = 1  SevaID = 173 

2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))(173, SevaName(0x55d1a99c4e90))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))(165, SevaName(0x55d1a99c26a0))(166, SevaName(0x55d1a99c1220))(167, SevaName(0x55d1a99c2e80))(168, SevaName(0x55d1a99c3660))(169, SevaName(0x55d1a99c3870))(170, SevaName(0x55d1a99c15a0))(171, SevaName(0x55d1a99a89a0))(172, SevaName(0x55d1a99c4600))))
2023-07-20 16:56:49.203 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "SankalpaN"  Type = 1  SevaID = 174 

2023-07-20 16:56:49.204 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))(173, SevaName(0x55d1a99c4e90))(174, SevaName(0x55d1a99c4c50))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))(165, SevaName(0x55d1a99c26a0))(166, SevaName(0x55d1a99c1220))(167, SevaName(0x55d1a99c2e80))(168, SevaName(0x55d1a99c3660))(169, SevaName(0x55d1a99c3870))(170, SevaName(0x55d1a99c15a0))(171, SevaName(0x55d1a99a89a0))(172, SevaName(0x55d1a99c4600))))
2023-07-20 16:56:49.204 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*)  Inseting Seva Name  "Poornapragna Hall Kanike N "  Type = 14  SevaID = 175 

2023-07-20 16:56:49.204 DBG default: bool SevaTypeNamesDataModel::processSevaNames(SevaName*) (QMap((102, SevaName(0x55d1a99a1c30))), QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))(173, SevaName(0x55d1a99c4e90))(174, SevaName(0x55d1a99c4c50))), QMap((54, SevaName(0x55d1a9995040))(55, SevaName(0x55d1a9995c40))(56, SevaName(0x55d1a9995f60))(57, SevaName(0x55d1a9995780))(58, SevaName(0x55d1a9996490))(59, SevaName(0x55d1a9997580))(60, SevaName(0x55d1a99977b0))(61, SevaName(0x55d1a9997e20))(62, SevaName(0x55d1a9997880))(63, SevaName(0x55d1a99995c0))(64, SevaName(0x55d1a9999a10))(65, SevaName(0x55d1a9999f00))(66, SevaName(0x55d1a9997b80))(67, SevaName(0x55d1a999aea0))(68, SevaName(0x55d1a999ad50))(120, SevaName(0x55d1a99aedf0))), QMap((23, SevaName(0x55d1a997bca0))(24, SevaName(0x55d1a997bee0))(25, SevaName(0x55d1a997c190))(26, SevaName(0x55d1a998d590))(27, SevaName(0x55d1a998dd70))(28, SevaName(0x55d1a998e170))(29, SevaName(0x55d1a998e380))(30, SevaName(0x55d1a998e910))(31, SevaName(0x55d1a998ef70))(34, SevaName(0x55d1a998f3c0))(35, SevaName(0x55d1a998f760))(36, SevaName(0x55d1a998fb90))(38, SevaName(0x55d1a9990340))(39, SevaName(0x55d1a9990720))(40, SevaName(0x55d1a9990ea0))(41, SevaName(0x55d1a9991480))(43, SevaName(0x55d1a9991d90))(44, SevaName(0x55d1a9992130))), QMap((12, SevaName(0x55d1a9517800))(13, SevaName(0x55d1a9979400))(14, SevaName(0x55d1a99795f0))(70, SevaName(0x55d1a999bbc0))(71, SevaName(0x55d1a999c380))(72, SevaName(0x55d1a999bf00))(73, SevaName(0x55d1a999d060))(76, SevaName(0x55d1a999e3d0))), QMap((78, SevaName(0x55d1a999f480))(79, SevaName(0x55d1a999f900))(80, SevaName(0x55d1a99a0060))), QMap((81, SevaName(0x55d1a99a0740))(82, SevaName(0x55d1a99a0660))(83, SevaName(0x55d1a99a02b0))(84, SevaName(0x55d1a99a14a0))(89, SevaName(0x55d1a99a2f10))), QMap((74, SevaName(0x55d1a999d2f0))(90, SevaName(0x55d1a99a3450))(91, SevaName(0x55d1a99a3890))(92, SevaName(0x55d1a99a3d10))(93, SevaName(0x55d1a99a4100))(94, SevaName(0x55d1a99a4600))(95, SevaName(0x55d1a99a4a80))(96, SevaName(0x55d1a99a4f40))(97, SevaName(0x55d1a99a53a0))(98, SevaName(0x55d1a99a5920))(99, SevaName(0x55d1a99a6370))), QMap((16, SevaName(0x55d1a997a4c0))(17, SevaName(0x55d1a997a870))(109, SevaName(0x55d1a99aa450))), QMap((5, SevaName(0x55d1a95197f0))(10, SevaName(0x55d1a94771a0))(19, SevaName(0x55d1a997acf0))(46, SevaName(0x55d1a9992d30))(52, SevaName(0x55d1a9994b30))(53, SevaName(0x55d1a9994910))(110, SevaName(0x55d1a99ac3e0))(113, SevaName(0x55d1a99ac2c0))(123, SevaName(0x55d1a99b01d0))(127, SevaName(0x55d1a99b3490))), QMap((50, SevaName(0x55d1a99937b0))(112, SevaName(0x55d1a99ad930))), QMap((9, SevaName(0x55d1a9517e00))), QMap((11, SevaName(0x55d1a95b9470))), QMap((15, SevaName(0x55d1a997a080))), QMap((20, SevaName(0x55d1a997b6b0))(111, SevaName(0x55d1a99ac760))(175, SevaName(0x55d1a99c5c00))), QMap((42, SevaName(0x55d1a9991820))(51, SevaName(0x55d1a9994670))(105, SevaName(0x55d1a99ab3e0))(106, SevaName(0x55d1a99ab850))(124, SevaName(0x55d1a99b3640))), QMap((45, SevaName(0x55d1a99927b0))(69, SevaName(0x55d1a999b8f0))(100, SevaName(0x55d1a99a68e0))(126, SevaName(0x55d1a99af910))), QMap((77, SevaName(0x55d1a999e570))), QMap((87, SevaName(0x55d1a99a23d0))(88, SevaName(0x55d1a99a2980))), QMap((107, SevaName(0x55d1a99a9b00))), QMap((114, SevaName(0x55d1a99ace90))(115, SevaName(0x55d1a99a9e80))(116, SevaName(0x55d1a99a9720))(117, SevaName(0x55d1a99acdf0))(118, SevaName(0x55d1a99aeaa0))(119, SevaName(0x55d1a99af0c0))), QMap((122, SevaName(0x55d1a99afda0))), QMap((128, SevaName(0x55d1a99b22e0))(129, SevaName(0x55d1a99b2900))(130, SevaName(0x55d1a99b2c30))(131, SevaName(0x55d1a99b1c60))(132, SevaName(0x55d1a99b2b20))(133, SevaName(0x55d1a99b18b0))(134, SevaName(0x55d1a99b4090))(135, SevaName(0x55d1a99b3cb0))(136, SevaName(0x55d1a99b4d00))(137, SevaName(0x55d1a99b4410))(138, SevaName(0x55d1a9975400))(139, SevaName(0x55d1a99758f0))(140, SevaName(0x55d1a9975cb0))(141, SevaName(0x55d1a9976550))(142, SevaName(0x55d1a9976b70))(143, SevaName(0x55d1a9976840))(144, SevaName(0x55d1a9977040))(145, SevaName(0x55d1a9978a20))(146, SevaName(0x55d1a9977530))(147, SevaName(0x55d1a9979090))(148, SevaName(0x55d1a99bdc30))(149, SevaName(0x55d1a9978be0))(150, SevaName(0x55d1a9977d90))(151, SevaName(0x55d1a9978190))(152, SevaName(0x55d1a9977b20))(153, SevaName(0x55d1a9977e10))(154, SevaName(0x55d1a99be510))(155, SevaName(0x55d1a99befa0))(156, SevaName(0x55d1a99783b0))(157, SevaName(0x55d1a99bd7f0))(158, SevaName(0x55d1a99bf840))(159, SevaName(0x55d1a99bfbb0))), QMap((160, SevaName(0x55d1a99bf130))(161, SevaName(0x55d1a99c1f10))(162, SevaName(0x55d1a99be020))(163, SevaName(0x55d1a99c0fd0))(164, SevaName(0x55d1a99c1680))(165, SevaName(0x55d1a99c26a0))(166, SevaName(0x55d1a99c1220))(167, SevaName(0x55d1a99c2e80))(168, SevaName(0x55d1a99c3660))(169, SevaName(0x55d1a99c3870))(170, SevaName(0x55d1a99c15a0))(171, SevaName(0x55d1a99a89a0))(172, SevaName(0x55d1a99c4600))))
2023-07-20 16:56:49.204 DBG default: bool DBInterface::querySevaNames() querying seva names done 

2023-07-20 16:56:49.204 DBG default: static SevaTypeNamesDataModel* SevaTypeNamesDataModel::self() SevaTypeNamesDataModel Object is returned 

2023-07-20 16:56:49.204 DBG default: UserManagement::UserManagement(QObject*) 

2023-07-20 16:56:49.204 DBG default: The role number recieved -1 

2023-07-20 16:56:49.204 DBG default: SevaDetailsTableView::SevaDetailsTableView(QObject*) 

2023-07-20 16:56:49.205 DBG default: hello suman 

2023-07-20 16:56:49.205 DBG default: AccountReportModel::AccountReportModel(QObject*) 

2023-07-20 16:56:49.205 DBG default: BookingReportModel::BookingReportModel(QObject*) 

2023-07-20 16:56:49.205 DBG default: AccountReportDateRangeModel::AccountReportDateRangeModel(QObject*) 

2023-07-20 16:56:49.205 DBG default: AccountReportMonthWiseModel::AccountReportMonthWiseModel(QObject*) 

2023-07-20 16:56:49.205 DBG default: BookingReportDateRangeModel::BookingReportDateRangeModel(QObject*) 

2023-07-20 16:56:49.205 DBG default: The connect status true 

2023-07-20 16:56:49.205 DBG default: BookingReportMonthWiseModel::BookingReportMonthWiseModel(QObject*) 

2023-07-20 16:56:49.205 DBG default: AccountFullReportModel::AccountFullReportModel(QObject*) 

2023-07-20 16:56:49.205 DBG default: AccountReportCSVProcessor::AccountReportCSVProcessor(QObject*) 

2023-07-20 16:56:49.205 DBG default: SevaBookingTableModel::SevaBookingTableModel(QObject*) 

2023-07-20 16:56:49.205 DBG default: SevaBookingSearchModel::SevaBookingSearchModel(QObject*) 

2023-07-20 16:56:49.205 DBG default: virtual QHash<int, QByteArray> SevaBookingTableModel::roleNames() const 

2023-07-20 16:56:49.205 DBG default: virtual QHash<int, QByteArray> SevaBookingTableModel::roleNames() const 

2023-07-20 16:56:49.205 DBG default: virtual QHash<int, QByteArray> SevaBookingTableModel::roleNames() const 

2023-07-20 16:56:49.206 DBG default: virtual QHash<int, QByteArray> SevaBookingTableModel::roleNames() const 

2023-07-20 16:56:49.206 DBG default: virtual QString SevaReceiptNumber::getNextReceiptNumber()  Date = 20  Mon = 7  Year = 2023
2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "1" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "2" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "3" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "4" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "5" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "5" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "5" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "6" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "7" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element  

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SevaName "" 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Found the last record element SNO "8" 

2023-07-20 16:56:49.206 WRN default: QSqlQuery::value: not positioned on a valid record
2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastReceiptNumber()  Size =  -1  receiptNo ID =  8  Value =  QVariant(Invalid) 

2023-07-20 16:56:49.206 DBG default: virtual QString SevaReceiptNumber::getNextReceiptNumber()  Last ReceiptNo from DB = 9  Generated = "2023_7_0009" 

2023-07-20 16:56:49.206 DBG default: QString SevaViewProxy::getNextReceiptNumber()  r number =  "2023_7_0009" 

2023-07-20 16:56:49.206 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 16:56:49.206 DBG default: BookingReportModel* SevaReport::bookingReportModel() const 

2023-07-20 16:56:49.206 DBG default: SevaCountOnDateModel::SevaCountOnDateModel(QObject*) 

2023-07-20 16:56:49.206 DBG default: hello suman 

2023-07-20 16:56:49.206 DBG default: saveVoucher::saveVoucher(QObject*) 

2023-07-20 16:56:49.206 DBG default: VoucherNumber::VoucherNumber() 

2023-07-20 16:56:49.206 DBG default: virtual QString VoucherNumber::getNextVoucherNumber() 

2023-07-20 16:56:49.206 DBG default: int DBInterface::getLastVoucherNumber() 

2023-07-20 16:56:49.206 DBG default: 3 

2023-07-20 16:56:49.206 DBG default: "4" 

2023-07-20 16:56:49.206 DBG default: VoucherReportModel::VoucherReportModel(QObject*) 

2023-07-20 16:56:49.206 DBG default: DevoteeProxy::DevoteeProxy() 

2023-07-20 16:56:49.206 DBG default: DevoteeDetailsTableModel::DevoteeDetailsTableModel(QObject*) 

2023-07-20 16:56:49.206 DBG default: Creating the DataModel Object  

2023-07-20 16:56:49.206 DBG default: DevoteDetailsDataModel::DevoteDetailsDataModel(QObject*) 

2023-07-20 16:56:49.206 DBG default: Creating the DataBase Connection  

2023-07-20 16:56:49.206 DBG default: QList<DevotePersnalDetails*> DevoteeDataInterface::getAllDevotees()  SQL Query =  "select * from persondetails" 

2023-07-20 16:56:49.206 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.206 DBG default:  Name = "Nagabhushan"
2023-07-20 16:56:49.206 DBG default:  Nakshatra  "Anuradha"
2023-07-20 16:56:49.206 DBG default:  Gothra  "Vashistha" 

2023-07-20 16:56:49.206 DBG default:  Mobile  "9663650110" 

2023-07-20 16:56:49.206 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.206 DBG default:  Name = "Sudhanva"
2023-07-20 16:56:49.206 DBG default:  Nakshatra  ""
2023-07-20 16:56:49.206 DBG default:  Gothra  "" 

2023-07-20 16:56:49.206 DBG default:  Mobile  "9980510563" 

2023-07-20 16:56:49.206 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.206 DBG default:  Name = "Sachin Kulkarni"
2023-07-20 16:56:49.206 DBG default:  Nakshatra  ""
2023-07-20 16:56:49.206 DBG default:  Gothra  "" 

2023-07-20 16:56:49.206 DBG default:  Mobile  "9916962524" 

2023-07-20 16:56:49.206 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.206 DBG default:  Name = "Sham Bhat Joshi"
2023-07-20 16:56:49.206 DBG default:  Nakshatra  "Bharani"
2023-07-20 16:56:49.206 DBG default:  Gothra  "Puthamanasa" 

2023-07-20 16:56:49.206 DBG default:  Mobile  "8073869420" 

2023-07-20 16:56:49.206 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Sham Bhat Joshi"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Bharani"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Puthamanasa" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "8073869420" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Vijayendra Kulkarni"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Vishakha"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Shrivathsa" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9880470969" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Vinay Kumar"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Uttarabhadrapada"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Sankhyayanasa" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9886058482" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Vinay Kumar"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Uttarabhadrapada"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Sankhyayanasa" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9886058482" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Sripadachar"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Ashwini"
2023-07-20 16:56:49.207 DBG default:  Gothra  "" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9480585854" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Raghunadan"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Bharani"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Jamadagni" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9741599842" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Ravindra Malagi"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Ashlesha"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Harithasa" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9483957542" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Murali"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Ashwini"
2023-07-20 16:56:49.207 DBG default:  Gothra  "" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9686669462" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "A Raghavendra Murthy"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Swati"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "8123886837" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "A Raghavendra Murthy"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Swati"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "8123886837" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "R S Kulkarni"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Ashwini"
2023-07-20 16:56:49.207 DBG default:  Gothra  "" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9916835446" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "R S Kulkarni"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Ashwini"
2023-07-20 16:56:49.207 DBG default:  Gothra  "" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9916835446" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Mohan Kumar"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Uttarashadha"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Maudgalya" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9481804498" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Mohan Kumar"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Uttarashadha"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Maudgalya" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9481804498" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Rakshit"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Uttarashadha"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Bharadwaja" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9880033002" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Ritthi Sripada Rao"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Purvaphalguni"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Bharadwaja" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9844018826" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Pavamana M"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Ashwini"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Gargeyyesa" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9986013228" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.207 DBG default:  Name = "Naveen"
2023-07-20 16:56:49.207 DBG default:  Nakshatra  "Revati"
2023-07-20 16:56:49.207 DBG default:  Gothra  "Gargeyyesa" 

2023-07-20 16:56:49.207 DBG default:  Mobile  "9880932546" 

2023-07-20 16:56:49.207 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Adavi Acharya"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Hasta"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Vashistha" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "8310285283" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Adavi Acharya"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Hasta"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Vashistha" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "8310285283" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Sumanth"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Jyeshtha"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Bharadwaja" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9964144411" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Krishnamurthy"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Ashwini"
2023-07-20 16:56:49.208 DBG default:  Gothra  "" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9980632348" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "N Shridar"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Hasta"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Vashistha" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9845370210" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Raghavendra"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  ""
2023-07-20 16:56:49.208 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9945272433" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Rashmi"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Purvashadha"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Mounabharghava" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "7204316233" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Sowmya"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Ashwini"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Vashistha" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9739044304" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Umesh"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Shravana"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9845512180" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Umesh"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Shravana"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9845512180" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Harini"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Punarvasu"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Dhananjaya" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9342555155" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Badari Vishal"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Revati"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Jamadagni" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9535798004" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Akshay Desai"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Ashwini"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Kaundinya" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9742083477" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Abhay Desai"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Anuradha"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Kaundinya" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9148653143" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Anand Avadhani"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Swati"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Mounabharghava" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9845923575" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Gururaj Bidikar"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Pushya"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Galava" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9538974640" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Sanjay Rao A N"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Shathabhisha"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Bharadwaja" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "7353989225" 

2023-07-20 16:56:49.208 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.208 DBG default:  Name = "Raghottamachar"
2023-07-20 16:56:49.208 DBG default:  Nakshatra  "Bharani"
2023-07-20 16:56:49.208 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.208 DBG default:  Mobile  "9880216226" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Arundathi"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  ""
2023-07-20 16:56:49.209 DBG default:  Gothra  "" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9742920275" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Sudheendra"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Pushya"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Athreyasa" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "8310845727" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Vadiraj"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Chitra"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Jamadagni" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9886249774" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Srinath A Adhani"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Rohini"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Mounabharghava" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9886809959" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "R S Kulkarni"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  ""
2023-07-20 16:56:49.209 DBG default:  Gothra  "" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9916835446" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Jayathirtha Achar"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Anuradha"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Vashistha" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9449294055" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "B K Sudheendra"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Revati"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Athreyasa" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9902167768" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Sanket kulkarni"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Uttarashadha"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Vishwamitra" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9916860118" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Mohan"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Anuradha"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9980039531" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Mohan"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Anuradha"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9980039531" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Madwamurthy"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Ashwini"
2023-07-20 16:56:49.209 DBG default:  Gothra  "" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9448882578" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Madhusudan Gudi"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Moola"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Bharadwaja" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9886521762" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Dr Madhva Rao H R"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Uttarabhadrapada"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9980044875" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Pranesh Mannari"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Vishakha"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Harithasa" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9844246596" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Dwarakanath"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Dhanishtha"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Bharadwaja" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "7829769769" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Vivek Kulkarni"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Chitra"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Athreyasa" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9008466500" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Gopala Krishna"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Punarvasu"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Vashistha" 

2023-07-20 16:56:49.209 DBG default:  Mobile  "9845232210" 

2023-07-20 16:56:49.209 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.209 DBG default:  Name = "Lakshmana Rao"
2023-07-20 16:56:49.209 DBG default:  Nakshatra  "Anuradha"
2023-07-20 16:56:49.209 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "9886459736" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Gopalakrishna Mangalgi"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Uttarabhadrapada"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Kaushika" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "9449851799" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Muralidhar A N"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Uttarashadha"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Kaundinya" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "6362274483" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Vasumathi"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Vishakha"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "7349359929" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Krishna H Math"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Punarvasu"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "9731316254" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Subrahmanya"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  ""
2023-07-20 16:56:49.210 DBG default:  Gothra  "" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "8884101784" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Subrahmanya"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  ""
2023-07-20 16:56:49.210 DBG default:  Gothra  "" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "8884101784" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Jayaram Pandurangi"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Purvabhadrapada"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Vashistha" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "9739976101" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Jayaram Pandurangi"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Purvabhadrapada"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Vashistha" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "9739976101" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Srinidhi"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Purvashadha"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Kaundinya" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "7760884275" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Vijaya Vittala"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Magha"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "9964619005" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Keshava"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Magha"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Vashistha" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "9844613366" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "SathyaNarayana"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Ashlesha"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "9741002738" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Sunil Bannur"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Uttarabhadrapada"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Bharadwaja" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "9900139304" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Sathya Prakash"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Purvaphalguni"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Mounabharghava" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "7760441901" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Sathya Prakash"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Purvaphalguni"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Mounabharghava" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "7760441901" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Raghavendra Rao"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Ashwini"
2023-07-20 16:56:49.210 DBG default:  Gothra  "Kaundinya" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "9448395797" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Chandrika Burly"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  ""
2023-07-20 16:56:49.210 DBG default:  Gothra  "" 

2023-07-20 16:56:49.210 DBG default:  Mobile  "9845908028" 

2023-07-20 16:56:49.210 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.210 DBG default:  Name = "Krishnamurthy"
2023-07-20 16:56:49.210 DBG default:  Nakshatra  "Ashwini"
2023-07-20 16:56:49.211 DBG default:  Gothra  "Kaushika" 

2023-07-20 16:56:49.211 DBG default:  Mobile  "9632216698" 

2023-07-20 16:56:49.211 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.211 DBG default:  Name = "Srikanth R Kulkarni"
2023-07-20 16:56:49.211 DBG default:  Nakshatra  ""
2023-07-20 16:56:49.211 DBG default:  Gothra  "Harithasa" 

2023-07-20 16:56:49.211 DBG default:  Mobile  "9741371042" 

2023-07-20 16:56:49.211 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.211 DBG default:  Name = "Jagadish Rao"
2023-07-20 16:56:49.211 DBG default:  Nakshatra  "Uttarashadha"
2023-07-20 16:56:49.211 DBG default:  Gothra  "Gouthama" 

2023-07-20 16:56:49.211 DBG default:  Mobile  "9810295322" 

2023-07-20 16:56:49.211 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.211 DBG default:  Name = "Jagadish Rao"
2023-07-20 16:56:49.211 DBG default:  Nakshatra  "Uttarashadha"
2023-07-20 16:56:49.211 DBG default:  Gothra  "Gouthama" 

2023-07-20 16:56:49.211 DBG default:  Mobile  "9810295322" 

2023-07-20 16:56:49.211 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.211 DBG default:  Name = "Gopalakrishna Mangalgi"
2023-07-20 16:56:49.211 DBG default:  Nakshatra  "Uttarabhadrapada"
2023-07-20 16:56:49.211 DBG default:  Gothra  "Kaushika" 

2023-07-20 16:56:49.211 DBG default:  Mobile  "9449851799" 

2023-07-20 16:56:49.211 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.211 DBG default:  Name = "Sham Bhat Joshi"
2023-07-20 16:56:49.211 DBG default:  Nakshatra  "Bharani"
2023-07-20 16:56:49.211 DBG default:  Gothra  "Puthamanasa" 

2023-07-20 16:56:49.211 DBG default:  Mobile  "8073869420" 

2023-07-20 16:56:49.211 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.211 DBG default:  Name = "Rajkumar"
2023-07-20 16:56:49.211 DBG default:  Nakshatra  "Purvaphalguni"
2023-07-20 16:56:49.211 DBG default:  Gothra  "Athreyasa" 

2023-07-20 16:56:49.211 DBG default:  Mobile  "9740252962" 

2023-07-20 16:56:49.211 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.211 DBG default:  Name = "dheeru"
2023-07-20 16:56:49.211 DBG default:  Nakshatra  "Bharani"
2023-07-20 16:56:49.211 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.211 DBG default:  Mobile  "9481914363" 

2023-07-20 16:56:49.211 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.211 DBG default:  Name = "Lakshmana rao"
2023-07-20 16:56:49.211 DBG default:  Nakshatra  "Swati"
2023-07-20 16:56:49.211 DBG default:  Gothra  "kashyapa" 

2023-07-20 16:56:49.211 DBG default:  Mobile  "9945860832" 

2023-07-20 16:56:49.211 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.211 DBG default:  Name = "Yathin N P"
2023-07-20 16:56:49.211 DBG default:  Nakshatra  "Jyeshtha"
2023-07-20 16:56:49.211 DBG default:  Gothra  "Kashyapa" 

2023-07-20 16:56:49.211 DBG default:  Mobile  "6361606968" 

2023-07-20 16:56:49.211 DBG default: DevotePersnalDetails::DevotePersnalDetails(QObject*) 

2023-07-20 16:56:49.211 DBG default:  Name = "swathi"
2023-07-20 16:56:49.211 DBG default:  Nakshatra  "Magha"
2023-07-20 16:56:49.211 DBG default:  Gothra  "Bharadwaja" 

2023-07-20 16:56:49.211 DBG default:  Mobile  "9481914363_2" 

2023-07-20 16:56:49.211 DBG default: QList<DevotePersnalDetails*> DevoteeDataInterface::getAllDevotees()  Total Devotees Matched  86 QSqlError("", "", "")  Time Spent = 4 

2023-07-20 16:56:49.211 DBG default: DevoteDetailsDataModel::DevoteDetailsDataModel(QObject*)  Total Devotees = 86
2023-07-20 16:56:49.211 DBG default: DevoteeDetailsSearchModel::DevoteeDetailsSearchModel(QObject*) 

2023-07-20 16:56:49.211 DBG default: virtual QHash<int, QByteArray> DevoteeDetailsTableModel::roleNames() const 

2023-07-20 16:56:49.211 DBG default: virtual QHash<int, QByteArray> DevoteeDetailsTableModel::roleNames() const 

2023-07-20 16:56:49.211 DBG default: virtual QHash<int, QByteArray> DevoteeDetailsTableModel::roleNames() const 

2023-07-20 16:56:49.211 DBG default: virtual QHash<int, QByteArray> DevoteeDetailsTableModel::roleNames() const 

2023-07-20 16:56:49.211 DBG default: QString TrustListModel::getConfigLocation() 

2023-07-20 16:56:49.211 DBG default: QString TrustListModel::getDataLocation() 

2023-07-20 16:56:49.211 DBG qml: str1 = --/home/ubuntuhp/Temple_suman/Temple_12_7_2023_Devotee/Temple-main/bins/Config/Hubablli
2023-07-20 16:56:49.211 DBG qml: str2 = --/home/ubuntuhp/Temple_suman/Temple_12_7_2023_Devotee/Temple-main/bins/Data/Hubablli
2023-07-20 16:56:49.225 DBG qml: The Page Number=== 0
2023-07-20 16:56:49.225 DBG qml: The page number is 0
2023-07-20 16:56:49.225 DBG qml: SingleTon is created. Screen density  == 6.210244392366923
2023-07-20 16:56:49.225 DBG qml: Screen screenWidth size =1920
2023-07-20 16:56:49.225 DBG qml: Screen screenHeight size =1000
2023-07-20 16:56:49.225 WRN default: qrc:/ui/Login.qml:37:13: Unable to assign [undefined] to bool
2023-07-20 16:56:49.225 WRN default: qrc:/ui/Login.qml:44:13: Unable to assign [undefined] to bool
2023-07-20 16:56:49.225 WRN default: qrc:/ui/Login.qml:80:17: Unable to assign [undefined] to bool
2023-07-20 16:56:49.225 DBG default: int TrustListModel::getTrustListSize() 

2023-07-20 16:56:52.573 WRN default: qrc:/ui/Login.qml:128:17: QML QQuickTextInput*: Binding loop detected for property "focus"
2023-07-20 16:56:55.903 DBG default: void UserManagement::authorize(QString, QString) "admin" "admin123" 

2023-07-20 16:56:55.903 DBG default: bool DBInterface::checkCredentials(QString, QString) 

2023-07-20 16:56:55.904 DBG default: The while id and password  "admin" "admin" 

2023-07-20 16:56:55.904 DBG default: bool DBInterface::checkCredentials(QString, QString) suman db id and password ==   "admin" "admin123"
2023-07-20 16:56:55.904 DBG qml: Credentials are correct
2023-07-20 16:56:55.904 DBG qml: Wrong credentials 0
2023-07-20 16:56:55.909 WRN default: qrc:/ui/MenuPage.qml:190:5: QML Connections: Detected function "onLoadMenuPage" in Connections element. This is probably intended to be a signal handler but no signal of the target matches the name.
2023-07-20 16:56:55.912 DBG qml: the accounts enable false
2023-07-20 16:56:55.912 DBG qml: SingleTon is created. Screen density  == 6.210244392366923
2023-07-20 16:56:55.912 DBG qml: Screen screenWidth size =1920
2023-07-20 16:56:55.912 DBG qml: Screen screenHeight size =1000
2023-07-20 16:56:55.912 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-07-20 16:56:55.912 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-07-20 16:56:55.912 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-07-20 16:56:55.912 WRN default: qrc:/ui/components/TempleButton.qml:10:5: Unable to assign [undefined] to double
2023-07-20 16:56:55.912 DBG default: The role number is 1 

2023-07-20 16:56:55.912 DBG default: void UserManagement::user_Recieved(int, QString) 

2023-07-20 16:56:55.912 DBG default: The role number recieved 1 

2023-07-20 16:56:56.647 DBG qml: account details button clicked
2023-07-20 16:56:56.647 DBG qml: Clicked on AccountDetails
2023-07-20 16:56:56.677 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 16:56:56.677 DBG default: int AccountReportModel::iGrandTotal() const 0 

2023-07-20 16:56:56.678 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 16:56:56.688 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 0 

2023-07-20 16:56:56.697 DBG default: void ReportFilterElements::setSYear(const QString&) 

2023-07-20 16:56:56.697 DBG default: const QString& ReportFilterElements::sYear() const 

2023-07-20 16:56:56.697 DBG qml: accont report Selected year2015
2023-07-20 16:56:56.698 DBG default: void ReportFilterElements::setSMonth(const QString&) 

2023-07-20 16:56:56.698 DBG default: const QString& ReportFilterElements::sMonth() const 

2023-07-20 16:56:56.698 DBG qml: Selected month1
2023-07-20 16:56:56.698 WRN default: qrc:/ui/components/MyReportFilter.qml:312:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.698 WRN default: qrc:/ui/components/MyReportFilter.qml:323:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.747 WRN default: qrc:/ui/components/MyReportFilter.qml:258:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.747 WRN default: qrc:/ui/components/MyReportFilter.qml:268:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.764 WRN default: qrc:/ui/components/MyReportFilter.qml:212:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.765 WRN default: qrc:/ui/components/MyReportFilter.qml:131:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.765 WRN default: qrc:/ui/components/MyReportFilter.qml:169:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.766 WRN default: qrc:/ui/components/MyReportFilter.qml:312:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.766 WRN default: qrc:/ui/components/MyReportFilter.qml:323:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.766 WRN default: qrc:/ui/components/MyReportFilter.qml:258:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.766 WRN default: qrc:/ui/components/MyReportFilter.qml:268:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.766 WRN default: qrc:/ui/components/MyReportFilter.qml:212:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.766 WRN default: qrc:/ui/components/MyReportFilter.qml:131:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.766 WRN default: qrc:/ui/components/MyReportFilter.qml:169:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.766 DBG qml: In Component.onCompleted: of seva report page
2023-07-20 16:56:56.766 DBG qml: In  Component.onCompleted: loader srp
2023-07-20 16:56:56.766 DBG qml: In Component.onCompleted: of seva report page total text 0.00 ₹
2023-07-20 16:56:56.770 DBG default: const QString& ReportFilterElements::sMonth() const 

2023-07-20 16:56:56.770 DBG default: const QString& ReportFilterElements::sYear() const 

2023-07-20 16:56:56.770 DBG qml: The month and year initial 1   2015
2023-07-20 16:56:56.770 DBG qml:  Trying to get the list category
2023-07-20 16:56:56.770 DBG default: QAbstractItemModel* SevaViewProxy::getSevaTypeModel()  ############### 

2023-07-20 16:56:56.770 DBG default: bool SevaTypeViewModel::init() 

2023-07-20 16:56:56.770 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  0 

2023-07-20 16:56:56.770 DBG default: static SevaTypeNamesDataModel* SevaTypeNamesDataModel::self() SevaTypeNamesDataModel Object is returned 

2023-07-20 16:56:56.770 DBG default: bool SevaTypeViewModel::init()  Number of Seva Types = 24 

2023-07-20 16:56:56.770 DBG default: QAbstractItemModel* SevaViewProxy::getSevaTypeModel()  ############### 

2023-07-20 16:56:56.770 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.770 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.770 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.770 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.771 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 0 

2023-07-20 16:56:56.771 DBG default: void ReportFilterElements::setISevaType(int) 

2023-07-20 16:56:56.771 DBG default: int ReportFilterElements::iSevaType() const 

2023-07-20 16:56:56.771 DBG qml: 1
2023-07-20 16:56:56.771 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.771 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 0 

2023-07-20 16:56:56.771 DBG default: void ReportFilterElements::setISevaType(int) 

2023-07-20 16:56:56.771 DBG default: int ReportFilterElements::iSevaType() const 

2023-07-20 16:56:56.771 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.771 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 0 

2023-07-20 16:56:56.771 DBG default: QAbstractItemModel* SevaViewProxy::getSevaModel(int)  Seva Type = 1 

2023-07-20 16:56:56.771 DBG default: void SevaListViewModel::initSevaList(int) hello 1  

2023-07-20 16:56:56.771 DBG default: static SevaTypeNamesDataModel* SevaTypeNamesDataModel::self() SevaTypeNamesDataModel Object is returned 

2023-07-20 16:56:56.771 DBG default: void SevaListViewModel::initSevaList(int) hello 2 

2023-07-20 16:56:56.771 DBG default: void SevaListViewModel::initSevaList(int) data model object ==  SevaTypeNamesDataModel(0x55d1a998b530) 

2023-07-20 16:56:56.771 DBG default: QList<SevaName*> SevaTypeNamesDataModel::getSevaList(int)  Seva Type = 1 

2023-07-20 16:56:56.771 DBG default: QList<SevaName*> SevaTypeNamesDataModel::getSevaList(int)  Sevas===== >  QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))(173, SevaName(0x55d1a99c4e90))(174, SevaName(0x55d1a99c4c50))) 
(SevaName(0x55d1a951a0f0), SevaName(0x55d1a9569200), SevaName(0x55d1a9478aa0), SevaName(0x55d1a9518b20), SevaName(0x55d1a948bdc0), SevaName(0x55d1a997aac0), SevaName(0x55d1a998fc10), SevaName(0x55d1a99930e0), SevaName(0x55d1a9993590), SevaName(0x55d1a9993940), SevaName(0x55d1a999dc60), SevaName(0x55d1a99a1850), SevaName(0x55d1a99a1e40), SevaName(0x55d1a99a6540), SevaName(0x55d1a99a7b20), SevaName(0x55d1a99a82e0), SevaName(0x55d1a99aa200), SevaName(0x55d1a99af4b0), SevaName(0x55d1a99b2e60), SevaName(0x55d1a99c4e90), SevaName(0x55d1a99c4c50)) 

2023-07-20 16:56:56.771 DBG default: void SevaListViewModel::initSevaList(int) (SevaName(0x55d1a951a0f0), SevaName(0x55d1a9569200), SevaName(0x55d1a9478aa0), SevaName(0x55d1a9518b20), SevaName(0x55d1a948bdc0), SevaName(0x55d1a997aac0), SevaName(0x55d1a998fc10), SevaName(0x55d1a99930e0), SevaName(0x55d1a9993590), SevaName(0x55d1a9993940), SevaName(0x55d1a999dc60), SevaName(0x55d1a99a1850), SevaName(0x55d1a99a1e40), SevaName(0x55d1a99a6540), SevaName(0x55d1a99a7b20), SevaName(0x55d1a99a82e0), SevaName(0x55d1a99aa200), SevaName(0x55d1a99af4b0), SevaName(0x55d1a99b2e60), SevaName(0x55d1a99c4e90), SevaName(0x55d1a99c4c50)) 

2023-07-20 16:56:56.771 DBG default: QList<SevaName*> SevaTypeNamesDataModel::getSevaList(int)  Seva Type = 1 

2023-07-20 16:56:56.771 DBG default: QList<SevaName*> SevaTypeNamesDataModel::getSevaList(int)  Sevas===== >  QMap((2, SevaName(0x55d1a951a0f0))(3, SevaName(0x55d1a9569200))(4, SevaName(0x55d1a9478aa0))(6, SevaName(0x55d1a9518b20))(7, SevaName(0x55d1a948bdc0))(18, SevaName(0x55d1a997aac0))(37, SevaName(0x55d1a998fc10))(47, SevaName(0x55d1a99930e0))(48, SevaName(0x55d1a9993590))(49, SevaName(0x55d1a9993940))(75, SevaName(0x55d1a999dc60))(85, SevaName(0x55d1a99a1850))(86, SevaName(0x55d1a99a1e40))(101, SevaName(0x55d1a99a6540))(103, SevaName(0x55d1a99a7b20))(104, SevaName(0x55d1a99a82e0))(108, SevaName(0x55d1a99aa200))(121, SevaName(0x55d1a99af4b0))(125, SevaName(0x55d1a99b2e60))(173, SevaName(0x55d1a99c4e90))(174, SevaName(0x55d1a99c4c50))) 
(SevaName(0x55d1a951a0f0), SevaName(0x55d1a9569200), SevaName(0x55d1a9478aa0), SevaName(0x55d1a9518b20), SevaName(0x55d1a948bdc0), SevaName(0x55d1a997aac0), SevaName(0x55d1a998fc10), SevaName(0x55d1a99930e0), SevaName(0x55d1a9993590), SevaName(0x55d1a9993940), SevaName(0x55d1a999dc60), SevaName(0x55d1a99a1850), SevaName(0x55d1a99a1e40), SevaName(0x55d1a99a6540), SevaName(0x55d1a99a7b20), SevaName(0x55d1a99a82e0), SevaName(0x55d1a99aa200), SevaName(0x55d1a99af4b0), SevaName(0x55d1a99b2e60), SevaName(0x55d1a99c4e90), SevaName(0x55d1a99c4c50)) 

2023-07-20 16:56:56.771 DBG default: void ReportFilterElements::setSSevaName(const QString&) 

2023-07-20 16:56:56.771 DBG default: const QString& ReportFilterElements::sSevaName() const 

2023-07-20 16:56:56.771 DBG default: const QString& ReportFilterElements::sSevaName() const 

2023-07-20 16:56:56.771 DBG qml: Seva name selected : Chataka
2023-07-20 16:56:56.771 DBG default: int ReportFilterElements::iSevaType() const 

2023-07-20 16:56:56.771 DBG qml: Seva type selected in report filter : 1
2023-07-20 16:56:56.771 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.771 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.771 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.771 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 0 

2023-07-20 16:56:56.771 DBG default: QAbstractItemModel* SevaViewProxy::getSevaModel(int)  Seva Type = 0 

2023-07-20 16:56:56.771 DBG default: void SevaListViewModel::initSevaList(int) hello 1  

2023-07-20 16:56:56.771 DBG default: static SevaTypeNamesDataModel* SevaTypeNamesDataModel::self() SevaTypeNamesDataModel Object is returned 

2023-07-20 16:56:56.771 DBG default: void SevaListViewModel::initSevaList(int) hello 2 

2023-07-20 16:56:56.771 DBG default: void SevaListViewModel::initSevaList(int) data model object ==  SevaTypeNamesDataModel(0x55d1a998b530) 

2023-07-20 16:56:56.771 DBG default: QList<SevaName*> SevaTypeNamesDataModel::getSevaList(int)  Seva Type = 0 

2023-07-20 16:56:56.771 DBG default: QList<SevaName*> SevaTypeNamesDataModel::getSevaList(int)  Sevas===== >  QMap((102, SevaName(0x55d1a99a1c30))) 
(SevaName(0x55d1a99a1c30)) 

2023-07-20 16:56:56.771 DBG default: void SevaListViewModel::initSevaList(int) (SevaName(0x55d1a99a1c30)) 

2023-07-20 16:56:56.771 DBG default: QList<SevaName*> SevaTypeNamesDataModel::getSevaList(int)  Seva Type = 0 

2023-07-20 16:56:56.771 DBG default: QList<SevaName*> SevaTypeNamesDataModel::getSevaList(int)  Sevas===== >  QMap((102, SevaName(0x55d1a99a1c30))) 
(SevaName(0x55d1a99a1c30)) 

2023-07-20 16:56:56.771 DBG default: void ReportFilterElements::setISevaType(int) 

2023-07-20 16:56:56.771 DBG default: void ReportFilterElements::setSSevaName(const QString&) 

2023-07-20 16:56:56.771 DBG default: void ReportFilterElements::setSSingleDate(const QString&) 

2023-07-20 16:56:56.771 DBG default: void SevaReport::generateAccReport(ReportFilterElements*) 

2023-07-20 16:56:56.771 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 0 

2023-07-20 16:56:56.772 DBG default: void AccountReportModel::generateAccReport(ReportFilterElements*) 0 

2023-07-20 16:56:56.772 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 16:56:56.772 DBG default: void AccountReportModel::generateAccReport(ReportFilterElements*) elm date "20-07-2023" 

2023-07-20 16:56:56.772 DBG default: const QString& ReportFilterElements::sSevaName() const 

2023-07-20 16:56:56.772 DBG default: int ReportFilterElements::iSevaType() const 

2023-07-20 16:56:56.772 DBG default: void AccountReportModel::generateAccReport(ReportFilterElements*) elm ddetails "All" 0 

2023-07-20 16:56:56.772 DBG default: void AccountReportModel::generateAccReport(ReportFilterElements*) Inside c date acc rep 

2023-07-20 16:56:56.772 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 16:56:56.772 DBG default: QString AccountReportModel::FormatDate(QString) "20-07-2023" 

2023-07-20 16:56:56.772 DBG default: QString AccountReportModel::FormatDate(QString) QDate("2023-07-20") 

2023-07-20 16:56:56.772 DBG default: QString AccountReportModel::FormatDate(QString) "2023-07-20" 

2023-07-20 16:56:56.772 DBG default: void ReportFilterElements::setSSingleDate(const QString&) 

2023-07-20 16:56:56.772 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 16:56:56.772 DBG default: void AccountReportModel::generateAccReport(ReportFilterElements*) elm->setSSingleDate(FormatDate(elm->sSingleDate())) "2023-07-20" 

2023-07-20 16:56:56.772 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 16:56:56.772 DBG default: int ReportFilterElements::iSevaType() const 

2023-07-20 16:56:56.772 DBG default: const QString& ReportFilterElements::sSevaName() const 

2023-07-20 16:56:56.772 DBG default: void DBInterface::account_report_cdate_function(QString, int, QString) 

2023-07-20 16:56:56.772 DBG default: "2023-07-20" ^^^^^^^^^^^^^^^^^^^^^^^^^^  "All"    0 

2023-07-20 16:56:56.772 DBG default: First 

2023-07-20 16:56:56.772 DBG default:  Query string = "select SEVANAME,sum(QUANTITY) AS Qauntity,SEVACOST,sum(ADDITIONALCOST+(QUANTITY*SEVACOST)) AS SEVATOTALPRICE,BANK AS Tran_type from sevabooking where sevabooking.RECEIPT_DATE='2023-07-20' Group by sevabooking.BANK and sevabooking.SEVANAME,BANK;" 

2023-07-20 16:56:56.772 WRN default: QSqlQuery::prepare: empty query
2023-07-20 16:56:56.772 WRN default: QSqlQuery::prepare: empty query
2023-07-20 16:56:56.772 WRN default: QSqlQuery::prepare: empty query
2023-07-20 16:56:56.772 WRN default: QSqlQuery::prepare: empty query
2023-07-20 16:56:56.772 DBG default: inside cash false 

2023-07-20 16:56:56.772 DBG default:  Query string Acc rep true 

2023-07-20 16:56:56.772 DBG default: bool ReportFilterElements::bDatewise() const 

2023-07-20 16:56:56.772 DBG default: true 

2023-07-20 16:56:56.772 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 16:56:56.772 DBG default: "2023-07-20" 

2023-07-20 16:56:56.772 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 16:56:56.772 DBG qml: ******** 20-07-2023
2023-07-20 16:56:56.772 DBG default: void ReportFilterElements::setSSingleDate(const QString&) 

2023-07-20 16:56:56.772 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 16:56:56.772 DBG qml:   _rip.sSingleDate 220-07-2023
2023-07-20 16:56:56.772 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 16:56:56.772 DBG default: int AccountReportModel::getAccountReportQryListSize() 

2023-07-20 16:56:56.772 DBG qml: Component.completed:if of sevaProxy.sevaReport.accReportModel.getAccountReportQryListSize()===0
2023-07-20 16:56:56.772 DBG qml: In onSendError
2023-07-20 16:56:56.772 DBG default: void ReportFilterElements::setSYear(const QString&) 

2023-07-20 16:56:56.772 DBG default: const QString& ReportFilterElements::sYear() const 

2023-07-20 16:56:56.772 DBG qml: accont report Selected year2023
2023-07-20 16:56:56.773 DBG default: void ReportFilterElements::setSMonth(const QString&) 

2023-07-20 16:56:56.773 DBG default: const QString& ReportFilterElements::sMonth() const 

2023-07-20 16:56:56.773 DBG qml: Selected month7
2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 0 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 1 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 2 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 3 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 4 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 5 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 6 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 7 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 8 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 9 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 10 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 11 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 12 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 13 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 14 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 15 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 16 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 17 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 18 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.773 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 19 

2023-07-20 16:56:56.773 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 20 

2023-07-20 16:56:56.774 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 21 

2023-07-20 16:56:56.774 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 22 

2023-07-20 16:56:56.774 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual int SevaTypeViewModel::rowCount(const QModelIndex&) const  Row Count ==  24 

2023-07-20 16:56:56.774 DBG default: virtual QVariant SevaTypeViewModel::data(const QModelIndex&, int) const  Row = 23 

2023-07-20 16:56:56.774 DBG qml: SingleTon is created. Screen density  == 6.210244392366923
2023-07-20 16:56:56.774 DBG qml: Screen screenWidth size =1920
2023-07-20 16:56:56.774 DBG qml: Screen screenHeight size =1000
2023-07-20 16:56:56.774 DBG qml: SingleTon is created. Screen density  == 6.210244392366923
2023-07-20 16:56:56.774 DBG qml: Screen screenWidth size =1920
2023-07-20 16:56:56.774 DBG qml: Screen screenHeight size =1000
2023-07-20 16:56:56.774 WRN default: qrc:/ui/components/MyReportFilter.qml:312:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.774 WRN default: qrc:/ui/components/MyReportFilter.qml:323:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.774 WRN default: qrc:/ui/components/MyReportFilter.qml:312:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.774 WRN default: qrc:/ui/components/MyReportFilter.qml:323:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.774 WRN default: qrc:/ui/components/MyReportFilter.qml:258:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.774 WRN default: qrc:/ui/components/MyReportFilter.qml:268:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.781 WRN default: qrc:/ui/components/MyReportFilter.qml:258:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.781 WRN default: qrc:/ui/components/MyReportFilter.qml:268:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.781 WRN default: qrc:/ui/components/MyReportFilter.qml:212:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.783 WRN default: qrc:/ui/components/MyReportFilter.qml:212:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.783 WRN default: qrc:/ui/components/MyReportFilter.qml:212:17: QML MyDateEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.784 WRN default: qrc:/ui/components/MyReportFilter.qml:131:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.784 WRN default: qrc:/ui/components/MyReportFilter.qml:169:17: QML MyComboEntry: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.
2023-07-20 16:56:56.784 DBG qml: this is admin
2023-07-20 16:56:56.788 WRN default: Qt Quick Layouts: Polish loop detected. Aborting after two iterations.
2023-07-20 16:56:56.791 WRN default: Qt Quick Layouts: Polish loop detected. Aborting after two iterations.
2023-07-20 16:56:56.794 WRN default: Qt Quick Layouts: Polish loop detected. Aborting after two iterations.
2023-07-20 16:57:40.945 DBG qml: Ok clicked
2023-07-20 16:57:42.745 DBG default: const QString& ReportFilterElements::sMonth() const 

2023-07-20 16:57:42.745 DBG default: const QString& ReportFilterElements::sMonth() const 

2023-07-20 16:57:42.745 DBG qml: I am hereeee
2023-07-20 16:57:42.745 DBG default: void ReportFilterElements::setBSevawise(bool) 

2023-07-20 16:57:42.745 DBG default: void ReportFilterElements::setBDatewise(bool) 

2023-07-20 16:57:42.746 DBG default: void ReportFilterElements::setSSingleDate(const QString&) 

2023-07-20 16:57:42.746 DBG default: void ReportFilterElements::setSStartDate(const QString&) 

2023-07-20 16:57:42.746 DBG default: void ReportFilterElements::setSEndDate(const QString&) 

2023-07-20 16:57:42.746 DBG qml: In onLoadDateWisePage
2023-07-20 16:57:42.751 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 0 

2023-07-20 16:57:42.754 DBG qml: Component.completed: of SevaAccountReportOnDateRange.qml
2023-07-20 16:57:42.756 DBG qml: SingleTon is created. Screen density  == 6.210244392366923
2023-07-20 16:57:42.756 DBG qml: Screen screenWidth size =1920
2023-07-20 16:57:42.756 DBG qml: Screen screenHeight size =1000
2023-07-20 16:57:42.756 WRN default: qrc:/ui/SevaReportPage.qml:253:17: QML Connections: Detected function "onLoadDateWisePage" in Connections element. This is probably intended to be a signal handler but no signal of the target matches the name.
2023-07-20 16:57:42.756 WRN default: qrc:/ui/SevaReportPage.qml:253:17: QML Connections: Detected function "onLoadDateWiseForSlectedMonthPage" in Connections element. This is probably intended to be a signal handler but no signal of the target matches the name.
2023-07-20 16:57:42.756 DBG qml: ---------11----------------
2023-07-20 16:57:42.756 DBG qml: ---------12----------------
2023-07-20 16:57:42.756 DBG qml: In onSendReportDateRangeInputForWholeMonth
2023-07-20 16:57:42.756 DBG qml: In main
2023-07-20 16:57:42.756 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 0 

2023-07-20 16:57:42.756 DBG default: void AccountReportDateRangeModel::generateAccDateRangeReportForWholeMonth(ReportFilterElements*) 0 

2023-07-20 16:57:42.756 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 16:57:42.756 DBG default: void AccountReportDateRangeModel::generateAccDateRangeReportForWholeMonth(ReportFilterElements*) elm date "20-07-2023" 

2023-07-20 16:57:42.756 DBG default: const QString& ReportFilterElements::sSevaName() const 

2023-07-20 16:57:42.756 DBG default: int ReportFilterElements::iSevaType() const 

2023-07-20 16:57:42.756 DBG default: void AccountReportDateRangeModel::generateAccDateRangeReportForWholeMonth(ReportFilterElements*) elm ddetails "All" 0 

2023-07-20 16:57:42.756 DBG default: void AccountReportDateRangeModel::generateAccDateRangeReportForWholeMonth(ReportFilterElements*) elm ddetailqqqqqqqqqqqqqqqqqs 2 

2023-07-20 16:57:42.756 DBG default: const QString& ReportFilterElements::sYear() const 

2023-07-20 16:57:42.756 DBG default: const QString& ReportFilterElements::sMonth() const 

2023-07-20 16:57:42.756 DBG default: int ReportFilterElements::iSevaType() const 

2023-07-20 16:57:42.756 DBG default: const QString& ReportFilterElements::sSevaName() const 

2023-07-20 16:57:42.756 DBG default:  Query string = "select RECEIPT_DATE,sum(QUANTITY),sum(ADDITIONALCOST+(QUANTITY*SEVACOST)) from sevabooking where sevabooking.S_YEAR ='2023' and sevabooking.S_MONTH ='7' Group by sevabooking.RECEIPT_DATE;" 

2023-07-20 16:57:42.756 DBG default: In while of db *************************** "select RECEIPT_DATE,sum(QUANTITY),sum(ADDITIONALCOST+(QUANTITY*SEVACOST)) from sevabooking where sevabooking.S_YEAR ='2023' and sevabooking.S_MONTH ='7' Group by sevabooking.RECEIPT_DATE;" 

2023-07-20 16:57:42.756 DBG default: AccountReportDateRangeElement::AccountReportDateRangeElement(QObject*) 

2023-07-20 16:57:42.756 DBG default: In while of db ********query_other1.value(0).toString()******************* "2023-07-07" 

2023-07-20 16:57:42.756 DBG default: In while of db **********query_other1.value(1).toInt()***************** 9 

2023-07-20 16:57:42.756 DBG default: In while of db **************query_other1.value(2).toFloat()************* 7950 

2023-07-20 16:57:42.756 DBG default: bool AccountReportDateRangeModel::insertSevaRow(AccountReportDateRangeElement*) ------------ 

2023-07-20 16:57:42.756 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 0 

2023-07-20 16:57:42.756 DBG default: void AccountReportDateRangeModel::setIGrandTotal(int) 7950 

2023-07-20 16:57:42.757 DBG default: bool AccountReportDateRangeModel::insertSevaRow(AccountReportDateRangeElement*) 7950 

2023-07-20 16:57:42.757 DBG default: In while of db *************************** "select RECEIPT_DATE,sum(QUANTITY),sum(ADDITIONALCOST+(QUANTITY*SEVACOST)) from sevabooking where sevabooking.S_YEAR ='2023' and sevabooking.S_MONTH ='7' Group by sevabooking.RECEIPT_DATE;" 

2023-07-20 16:57:42.757 DBG default: AccountReportDateRangeElement::AccountReportDateRangeElement(QObject*) 

2023-07-20 16:57:42.757 DBG default: In while of db ********query_other1.value(0).toString()******************* "2023-07-09" 

2023-07-20 16:57:42.757 DBG default: In while of db **********query_other1.value(1).toInt()***************** 3 

2023-07-20 16:57:42.757 DBG default: In while of db **************query_other1.value(2).toFloat()************* 1400 

2023-07-20 16:57:42.757 DBG default: bool AccountReportDateRangeModel::insertSevaRow(AccountReportDateRangeElement*) ------------ 

2023-07-20 16:57:42.757 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 1 

2023-07-20 16:57:42.757 DBG default: void AccountReportDateRangeModel::setIGrandTotal(int) 9350 

2023-07-20 16:57:42.757 DBG default: bool AccountReportDateRangeModel::insertSevaRow(AccountReportDateRangeElement*) 9350 

2023-07-20 16:57:42.757 DBG default: In while of db *************************** "select RECEIPT_DATE,sum(QUANTITY),sum(ADDITIONALCOST+(QUANTITY*SEVACOST)) from sevabooking where sevabooking.S_YEAR ='2023' and sevabooking.S_MONTH ='7' Group by sevabooking.RECEIPT_DATE;" 

2023-07-20 16:57:42.757 DBG default: AccountReportDateRangeElement::AccountReportDateRangeElement(QObject*) 

2023-07-20 16:57:42.757 DBG default: In while of db ********query_other1.value(0).toString()******************* "2023-07-10" 

2023-07-20 16:57:42.757 DBG default: In while of db **********query_other1.value(1).toInt()***************** 4 

2023-07-20 16:57:42.757 DBG default: In while of db **************query_other1.value(2).toFloat()************* 42000 

2023-07-20 16:57:42.757 DBG default: bool AccountReportDateRangeModel::insertSevaRow(AccountReportDateRangeElement*) ------------ 

2023-07-20 16:57:42.757 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 2 

2023-07-20 16:57:42.757 DBG default: void AccountReportDateRangeModel::setIGrandTotal(int) 51350 

2023-07-20 16:57:42.757 DBG default: bool AccountReportDateRangeModel::insertSevaRow(AccountReportDateRangeElement*) 51350 

2023-07-20 16:57:42.757 DBG default: In while of db *************************** "select RECEIPT_DATE,sum(QUANTITY),sum(ADDITIONALCOST+(QUANTITY*SEVACOST)) from sevabooking where sevabooking.S_YEAR ='2023' and sevabooking.S_MONTH ='7' Group by sevabooking.RECEIPT_DATE;" 

2023-07-20 16:57:42.757 DBG default: AccountReportDateRangeElement::AccountReportDateRangeElement(QObject*) 

2023-07-20 16:57:42.757 DBG default: In while of db ********query_other1.value(0).toString()******************* "2023-07-18" 

2023-07-20 16:57:42.757 DBG default: In while of db **********query_other1.value(1).toInt()***************** 1 

2023-07-20 16:57:42.757 DBG default: In while of db **************query_other1.value(2).toFloat()************* 50 

2023-07-20 16:57:42.757 DBG default: bool AccountReportDateRangeModel::insertSevaRow(AccountReportDateRangeElement*) ------------ 

2023-07-20 16:57:42.757 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 3 

2023-07-20 16:57:42.757 DBG default: void AccountReportDateRangeModel::setIGrandTotal(int) 51400 

2023-07-20 16:57:42.757 DBG default: bool AccountReportDateRangeModel::insertSevaRow(AccountReportDateRangeElement*) 51400 

2023-07-20 16:57:42.757 DBG default: int AccountReportDateRangeModel::getAccountReportDateRangeQryListSize() 

2023-07-20 16:57:42.757 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 16:57:42.757 DBG default: int AccountReportModel::getAccountReportQryListSize() 

2023-07-20 16:57:42.757 DBG qml: ---------d----------------
2023-07-20 16:57:42.757 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 16:57:42.757 DBG default: int AccountReportModel::iGrandTotal() const 0 

2023-07-20 16:57:42.758 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.758 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.761 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.761 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 1 

2023-07-20 16:57:42.761 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.761 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const "2023-07-07" 

2023-07-20 16:57:42.761 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.761 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 9 

2023-07-20 16:57:42.761 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.761 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 7950 

2023-07-20 16:57:42.762 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.762 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.762 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.762 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 2 

2023-07-20 16:57:42.762 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.762 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const "2023-07-09" 

2023-07-20 16:57:42.762 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.762 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 3 

2023-07-20 16:57:42.762 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.763 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 1400 

2023-07-20 16:57:42.763 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.763 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.763 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.763 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 3 

2023-07-20 16:57:42.763 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.763 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const "2023-07-10" 

2023-07-20 16:57:42.763 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.763 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 4 

2023-07-20 16:57:42.763 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.763 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 42000 

2023-07-20 16:57:42.764 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.764 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.764 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.764 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 4 

2023-07-20 16:57:42.764 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.764 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const "2023-07-18" 

2023-07-20 16:57:42.764 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.764 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 1 

2023-07-20 16:57:42.765 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 16:57:42.765 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 50 

2023-07-20 17:09:55.142 DBG qml: mouse clicked left styleData.selected true
2023-07-20 17:09:55.143 DBG qml: clicked cell in table view  0
2023-07-20 17:09:55.143 DBG qml: clicked cell in table view coordinates =  QPointF(441, 37)
2023-07-20 17:09:55.143 DBG qml: clicked cell in table view clickIndex =  0
2023-07-20 17:09:55.143 DBG qml: clicked cell in table view  0
2023-07-20 17:09:55.143 DBG qml: clicked cell in table view  0
2023-07-20 17:09:55.143 DBG qml: Left 0
2023-07-20 17:09:55.144 DBG default: AccountReportDateRangeElement* AccountReportDateRangeModel::getAccountReportDateRangeElementAt(int) I am index  0 

2023-07-20 17:09:55.144 DBG default: AccountReportDateRangeElement* AccountReportDateRangeModel::getAccountReportDateRangeElementAt(int) "2023-07-07" 

2023-07-20 17:09:55.144 DBG default: AccountReportDateRangeElement* AccountReportDateRangeModel::getAccountReportDateRangeElementAt(int) 9 

2023-07-20 17:09:55.144 DBG default: AccountReportDateRangeElement* AccountReportDateRangeModel::getAccountReportDateRangeElementAt(int) 7950 

2023-07-20 17:09:55.144 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.145 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.145 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.146 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.146 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 1 

2023-07-20 17:09:55.146 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.146 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const "2023-07-07" 

2023-07-20 17:09:55.146 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.147 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 9 

2023-07-20 17:09:55.147 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.147 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 7950 

2023-07-20 17:09:55.147 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.147 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.148 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.148 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 2 

2023-07-20 17:09:55.148 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.148 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const "2023-07-09" 

2023-07-20 17:09:55.148 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.148 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 3 

2023-07-20 17:09:55.148 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.148 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 1400 

2023-07-20 17:09:55.148 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.149 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.149 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.149 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 3 

2023-07-20 17:09:55.149 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.149 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const "2023-07-10" 

2023-07-20 17:09:55.150 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.150 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 4 

2023-07-20 17:09:55.150 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.150 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 42000 

2023-07-20 17:09:55.150 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.150 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.151 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.151 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 4 

2023-07-20 17:09:55.151 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.151 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const "2023-07-18" 

2023-07-20 17:09:55.151 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.151 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 1 

2023-07-20 17:09:55.151 DBG default: virtual int AccountReportDateRangeModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.151 DBG default: virtual QVariant AccountReportDateRangeModel::data(const QModelIndex&, int) const 50 

2023-07-20 17:09:55.152 DBG qml: /////////////////////////////2023-07-07
2023-07-20 17:09:55.152 DBG qml: In   1111111111onLoadSingleDatePage(obj.date) 2023-07-07
2023-07-20 17:09:55.152 DBG qml:  Component.onDestruction of SevaAccountReportOnDateRange.qml
2023-07-20 17:09:55.168 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 17:09:55.168 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 17:09:55.168 DBG default: int AccountReportModel::iGrandTotal() const 0 

2023-07-20 17:09:55.169 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 17:09:55.171 WRN default: qrc:/ui/SevaAccountReportForSingleDate.qml:172:5: QML Connections: Implicitly defined onFoo properties in Connections are deprecated. Use this syntax instead: function onFoo(<arguments>) { ... }
2023-07-20 17:09:55.173 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 0 

2023-07-20 17:09:55.176 DBG qml: Component.completed: of SevaAccountReportForSingleDate.qml
2023-07-20 17:09:55.176 DBG qml: In Component.onCompleted: of seva report page single date total text 0.00 ₹
2023-07-20 17:09:55.180 DBG qml: SingleTon is created. Screen density  == 6.210244392366923
2023-07-20 17:09:55.180 DBG qml: Screen screenWidth size =1920
2023-07-20 17:09:55.180 DBG qml: Screen screenHeight size =1000
2023-07-20 17:09:55.180 WRN default: qrc:/ui/SevaReportPage.qml:253:17: QML Connections: Detected function "onLoadSingleDatePage" in Connections element. This is probably intended to be a signal handler but no signal of the target matches the name.
2023-07-20 17:09:55.180 WRN default: qrc:/ui/SevaReportPage.qml:253:17: QML Connections: Detected function "onLoadMonthWisePage" in Connections element. This is probably intended to be a signal handler but no signal of the target matches the name.
2023-07-20 17:09:55.180 WRN default: qrc:/ui/SevaReportPage.qml:253:17: QML Connections: Detected function "onLoadDateWiseForSlectedMonthPage" in Connections element. This is probably intended to be a signal handler but no signal of the target matches the name.
2023-07-20 17:09:55.180 DBG qml: ******** 07-07-2023
2023-07-20 17:09:55.180 DBG default: void ReportFilterElements::setBSevawise(bool) 

2023-07-20 17:09:55.180 DBG default: void ReportFilterElements::setBDatewise(bool) 

2023-07-20 17:09:55.180 DBG default: void ReportFilterElements::setSSingleDate(const QString&) 

2023-07-20 17:09:55.180 DBG default: void ReportFilterElements::setSStartDate(const QString&) 

2023-07-20 17:09:55.180 DBG default: void ReportFilterElements::setSEndDate(const QString&) 

2023-07-20 17:09:55.180 DBG default: int ReportFilterElements::iSevaType() const 

2023-07-20 17:09:55.180 DBG default: void ReportFilterElements::setISevaType(int) 

2023-07-20 17:09:55.180 DBG default: const QString& ReportFilterElements::sSevaName() const 

2023-07-20 17:09:55.180 DBG default: void ReportFilterElements::setSSevaName(const QString&) 

2023-07-20 17:09:55.180 DBG default: bool ReportFilterElements::bSevawise() const 

2023-07-20 17:09:55.180 DBG qml: In Loader of seva report page _rip.bSevawisetrue
2023-07-20 17:09:55.180 DBG default: bool ReportFilterElements::bDatewise() const 

2023-07-20 17:09:55.180 DBG qml: In Loader of seva report page _rip.bDatewisefalse
2023-07-20 17:09:55.180 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 17:09:55.180 DBG qml: In Loader of seva report page _rip.sSingleDate07-07-2023
2023-07-20 17:09:55.180 DBG default: const QString& ReportFilterElements::sStartDate() const 

2023-07-20 17:09:55.180 DBG qml: In Loader of seva report page  _rip.sStartDatenull
2023-07-20 17:09:55.180 DBG default: const QString& ReportFilterElements::sEndDate() const 

2023-07-20 17:09:55.180 DBG qml: In Loader of seva report page    _rip.sEndDate null
2023-07-20 17:09:55.180 DBG qml: In Loader of seva report page     _rip.iSelectedType0
2023-07-20 17:09:55.180 DBG default: int ReportFilterElements::iSevaType() const 

2023-07-20 17:09:55.181 DBG qml: In Loader of seva report page    _rip.iSevaType 0
2023-07-20 17:09:55.181 DBG default: const QString& ReportFilterElements::sSevaName() const 

2023-07-20 17:09:55.181 DBG qml: In Loader of seva report page    _rip.sSevaNameAll
2023-07-20 17:09:55.181 DBG qml: In main
2023-07-20 17:09:55.181 DBG default: void SevaReport::generateAccReport(ReportFilterElements*) 

2023-07-20 17:09:55.181 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 0 

2023-07-20 17:09:55.181 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 0 

2023-07-20 17:09:55.181 DBG default: void AccountReportModel::generateAccReport(ReportFilterElements*) 0 

2023-07-20 17:09:55.181 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 17:09:55.181 DBG default: void AccountReportModel::generateAccReport(ReportFilterElements*) elm date "07-07-2023" 

2023-07-20 17:09:55.181 DBG default: const QString& ReportFilterElements::sSevaName() const 

2023-07-20 17:09:55.181 DBG default: int ReportFilterElements::iSevaType() const 

2023-07-20 17:09:55.181 DBG default: void AccountReportModel::generateAccReport(ReportFilterElements*) elm ddetails "All" 0 

2023-07-20 17:09:55.181 DBG default: void AccountReportModel::generateAccReport(ReportFilterElements*) Inside c date acc rep 

2023-07-20 17:09:55.181 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 17:09:55.181 DBG default: QString AccountReportModel::FormatDate(QString) "07-07-2023" 

2023-07-20 17:09:55.181 DBG default: QString AccountReportModel::FormatDate(QString) QDate("2023-07-07") 

2023-07-20 17:09:55.181 DBG default: QString AccountReportModel::FormatDate(QString) "2023-07-07" 

2023-07-20 17:09:55.181 DBG default: void ReportFilterElements::setSSingleDate(const QString&) 

2023-07-20 17:09:55.181 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 17:09:55.181 DBG default: void AccountReportModel::generateAccReport(ReportFilterElements*) elm->setSSingleDate(FormatDate(elm->sSingleDate())) "2023-07-07" 

2023-07-20 17:09:55.181 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 17:09:55.181 DBG default: int ReportFilterElements::iSevaType() const 

2023-07-20 17:09:55.181 DBG default: const QString& ReportFilterElements::sSevaName() const 

2023-07-20 17:09:55.181 DBG default: void DBInterface::account_report_cdate_function(QString, int, QString) 

2023-07-20 17:09:55.181 DBG default: "2023-07-07" ^^^^^^^^^^^^^^^^^^^^^^^^^^  "All"    0 

2023-07-20 17:09:55.181 DBG default: First 

2023-07-20 17:09:55.181 DBG default:  Query string = "select SEVANAME,sum(QUANTITY) AS Qauntity,SEVACOST,sum(ADDITIONALCOST+(QUANTITY*SEVACOST)) AS SEVATOTALPRICE,BANK AS Tran_type from sevabooking where sevabooking.RECEIPT_DATE='2023-07-07' Group by sevabooking.BANK and sevabooking.SEVANAME,BANK;" 

2023-07-20 17:09:55.181 WRN default: QSqlQuery::prepare: empty query
2023-07-20 17:09:55.181 WRN default: QSqlQuery::prepare: empty query
2023-07-20 17:09:55.181 WRN default: QSqlQuery::prepare: empty query
2023-07-20 17:09:55.181 WRN default: QSqlQuery::prepare: empty query
2023-07-20 17:09:55.181 DBG default: inside cash false 

2023-07-20 17:09:55.182 DBG default:  Query string Acc rep true 

2023-07-20 17:09:55.182 DBG default:  Query string inside while = Acc rep "select SEVANAME,sum(QUANTITY) AS Qauntity,SEVACOST,sum(ADDITIONALCOST+(QUANTITY*SEVACOST)) AS SEVATOTALPRICE,BANK AS Tran_type from sevabooking where sevabooking.RECEIPT_DATE='2023-07-07' Group by sevabooking.BANK and sevabooking.SEVANAME,BANK;" 

2023-07-20 17:09:55.182 DBG default: AccountReportElement::AccountReportElement(QObject*) 

2023-07-20 17:09:55.182 DBG default: suman bank query--- "Cheque" 

2023-07-20 17:09:55.182 DBG default: "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.182 DBG default: "3" 

2023-07-20 17:09:55.182 DBG default: "500" 

2023-07-20 17:09:55.182 DBG default: "1500" 

2023-07-20 17:09:55.182 DBG default: The 4th query Value 0 

2023-07-20 17:09:55.182 DBG default: before emitting signal  account_report '''''''' 

2023-07-20 17:09:55.182 DBG default: bool AccountReportModel::insertSevaRow(AccountReportElement*) ------------ 

2023-07-20 17:09:55.182 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 0 

2023-07-20 17:09:55.182 DBG default: void AccountReportModel::setIGrandTotal(int) 1500 

2023-07-20 17:09:55.182 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 17:09:55.182 DBG default: int AccountReportModel::iGrandTotal() const 1500 

2023-07-20 17:09:55.182 DBG default: bool AccountReportModel::insertSevaRow(AccountReportElement*) 1500 

2023-07-20 17:09:55.182 DBG default: after emitting signal  account_report '''''''' 

2023-07-20 17:09:55.182 DBG default:  Query string inside while = Acc rep "select SEVANAME,sum(QUANTITY) AS Qauntity,SEVACOST,sum(ADDITIONALCOST+(QUANTITY*SEVACOST)) AS SEVATOTALPRICE,BANK AS Tran_type from sevabooking where sevabooking.RECEIPT_DATE='2023-07-07' Group by sevabooking.BANK and sevabooking.SEVANAME,BANK;" 

2023-07-20 17:09:55.182 DBG default: AccountReportElement::AccountReportElement(QObject*) 

2023-07-20 17:09:55.182 DBG default: suman bank query--- "NEFT" 

2023-07-20 17:09:55.182 DBG default: "M Navami Pavamana Homa" 

2023-07-20 17:09:55.182 DBG default: "1" 

2023-07-20 17:09:55.182 DBG default: "5000" 

2023-07-20 17:09:55.182 DBG default: "5000" 

2023-07-20 17:09:55.182 DBG default: The 4th query Value 0 

2023-07-20 17:09:55.182 DBG default: before emitting signal  account_report '''''''' 

2023-07-20 17:09:55.182 DBG default: bool AccountReportModel::insertSevaRow(AccountReportElement*) ------------ 

2023-07-20 17:09:55.182 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 1 

2023-07-20 17:09:55.182 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.182 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.182 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.182 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.182 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.182 DBG default: void AccountReportModel::setIGrandTotal(int) 6500 

2023-07-20 17:09:55.182 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 17:09:55.182 DBG default: int AccountReportModel::iGrandTotal() const 6500 

2023-07-20 17:09:55.183 DBG default: bool AccountReportModel::insertSevaRow(AccountReportElement*) 6500 

2023-07-20 17:09:55.183 DBG default: after emitting signal  account_report '''''''' 

2023-07-20 17:09:55.183 DBG default:  Query string inside while = Acc rep "select SEVANAME,sum(QUANTITY) AS Qauntity,SEVACOST,sum(ADDITIONALCOST+(QUANTITY*SEVACOST)) AS SEVATOTALPRICE,BANK AS Tran_type from sevabooking where sevabooking.RECEIPT_DATE='2023-07-07' Group by sevabooking.BANK and sevabooking.SEVANAME,BANK;" 

2023-07-20 17:09:55.183 DBG default: AccountReportElement::AccountReportElement(QObject*) 

2023-07-20 17:09:55.183 DBG default: suman bank query--- "UPI" 

2023-07-20 17:09:55.183 DBG default: "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.183 DBG default: "3" 

2023-07-20 17:09:55.183 DBG default: "50" 

2023-07-20 17:09:55.183 DBG default: "150" 

2023-07-20 17:09:55.183 DBG default: The 4th query Value 0 

2023-07-20 17:09:55.183 DBG default: before emitting signal  account_report '''''''' 

2023-07-20 17:09:55.183 DBG default: bool AccountReportModel::insertSevaRow(AccountReportElement*) ------------ 

2023-07-20 17:09:55.183 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 2 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.183 DBG default: void AccountReportModel::setIGrandTotal(int) 6650 

2023-07-20 17:09:55.183 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 17:09:55.183 DBG default: int AccountReportModel::iGrandTotal() const 6650 

2023-07-20 17:09:55.183 DBG default: bool AccountReportModel::insertSevaRow(AccountReportElement*) 6650 

2023-07-20 17:09:55.183 DBG default: after emitting signal  account_report '''''''' 

2023-07-20 17:09:55.183 DBG default:  Query string inside while = Acc rep "select SEVANAME,sum(QUANTITY) AS Qauntity,SEVACOST,sum(ADDITIONALCOST+(QUANTITY*SEVACOST)) AS SEVATOTALPRICE,BANK AS Tran_type from sevabooking where sevabooking.RECEIPT_DATE='2023-07-07' Group by sevabooking.BANK and sevabooking.SEVANAME,BANK;" 

2023-07-20 17:09:55.183 DBG default: AccountReportElement::AccountReportElement(QObject*) 

2023-07-20 17:09:55.183 DBG default: suman bank query--- "cash" 

2023-07-20 17:09:55.183 DBG default: "Chataka" 

2023-07-20 17:09:55.183 DBG default: "2" 

2023-07-20 17:09:55.183 DBG default: "800" 

2023-07-20 17:09:55.183 DBG default: "1300" 

2023-07-20 17:09:55.183 DBG default: The 4th query Value 0 

2023-07-20 17:09:55.183 DBG default: before emitting signal  account_report '''''''' 

2023-07-20 17:09:55.183 DBG default: bool AccountReportModel::insertSevaRow(AccountReportElement*) ------------ 

2023-07-20 17:09:55.183 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 3 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.183 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.184 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.184 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.184 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.184 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.184 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.184 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.184 DBG default: void AccountReportModel::setIGrandTotal(int) 7950 

2023-07-20 17:09:55.184 DBG default: AccountReportModel* SevaReport::accountreportModel() const 

2023-07-20 17:09:55.184 DBG default: int AccountReportModel::iGrandTotal() const 7950 

2023-07-20 17:09:55.184 DBG default: bool AccountReportModel::insertSevaRow(AccountReportElement*) 7950 

2023-07-20 17:09:55.184 DBG default: after emitting signal  account_report '''''''' 

2023-07-20 17:09:55.184 DBG default: bool ReportFilterElements::bDatewise() const 

2023-07-20 17:09:55.184 DBG default: false 

2023-07-20 17:09:55.184 DBG default: const QString& ReportFilterElements::sSingleDate() const 

2023-07-20 17:09:55.184 DBG default: "2023-07-07" 

2023-07-20 17:09:55.186 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.186 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.186 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.187 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.187 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.188 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 1 

2023-07-20 17:09:55.188 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.188 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.188 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.188 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.189 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 500 

2023-07-20 17:09:55.189 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.189 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 3 

2023-07-20 17:09:55.189 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.189 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.189 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 1500 

2023-07-20 17:09:55.190 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.190 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.190 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.191 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.191 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 2 

2023-07-20 17:09:55.191 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.191 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.191 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const "M Navami Pavamana Homa" 

2023-07-20 17:09:55.192 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.192 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 5000 

2023-07-20 17:09:55.192 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.192 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 1 

2023-07-20 17:09:55.192 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.192 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.193 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 5000 

2023-07-20 17:09:55.193 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.193 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.193 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.194 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.194 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 3 

2023-07-20 17:09:55.194 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.194 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.194 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.195 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.195 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 50 

2023-07-20 17:09:55.195 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.195 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 3 

2023-07-20 17:09:55.195 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.195 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.196 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 150 

2023-07-20 17:09:55.196 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.196 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.196 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.197 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 24 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.197 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 4 

2023-07-20 17:09:55.197 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.197 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const "Chataka" 

2023-07-20 17:09:55.197 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.197 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.198 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 800 

2023-07-20 17:09:55.198 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.198 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 2 

2023-07-20 17:09:55.198 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.198 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 1300 

2023-07-20 17:09:55.198 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.198 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.199 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.199 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.200 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.200 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 1 

2023-07-20 17:09:55.200 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.200 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.200 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.200 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.200 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 500 

2023-07-20 17:09:55.201 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.201 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 3 

2023-07-20 17:09:55.201 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.201 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.201 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.201 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.202 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.202 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.202 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 1500 

2023-07-20 17:09:55.202 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.202 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.203 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.203 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.205 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.205 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.205 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.205 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.205 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.205 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.205 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.205 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.206 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 2 

2023-07-20 17:09:55.206 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.206 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const "M Navami Pavamana Homa" 

2023-07-20 17:09:55.206 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.206 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 5000 

2023-07-20 17:09:55.206 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.206 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.207 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 1 

2023-07-20 17:09:55.207 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.207 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.207 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.207 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.207 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.208 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.208 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 5000 

2023-07-20 17:09:55.208 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.208 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.208 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.209 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.209 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 3 

2023-07-20 17:09:55.209 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.209 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.210 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.210 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.210 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 50 

2023-07-20 17:09:55.210 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.210 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 3 

2023-07-20 17:09:55.210 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.210 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.211 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.211 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.211 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.211 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.211 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.212 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 150 

2023-07-20 17:09:55.212 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.212 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.212 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.213 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.213 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 4 

2023-07-20 17:09:55.213 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.213 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const "Chataka" 

2023-07-20 17:09:55.213 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.213 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.214 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 800 

2023-07-20 17:09:55.214 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.214 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 2 

2023-07-20 17:09:55.214 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.214 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.214 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.214 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.215 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.215 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 4 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- "SRI SITA RAMANJANEYARIGE NOOTA VASTRA DHARANE pratyekavagi" 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 500 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 1500 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- "M Navami Pavamana Homa" 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 1 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 5000 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- "Panchamrutha/Abhisheka" 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 50 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 3 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 150 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 4 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- "Chataka" 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 800 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 2 

2023-07-20 17:09:55.215 DBG default: Suman Accounts--- 1300 

2023-07-20 17:09:55.215 DBG default: virtual QVariant AccountReportModel::data(const QModelIndex&, int) const 1300 

2023-07-20 17:11:39.119 DBG qml: Closing the report
2023-07-20 17:11:39.120 DBG qml: reset Model
2023-07-20 17:11:39.120 DBG default: void SevaReport::resetAccModel() 

2023-07-20 17:11:39.120 DBG default: void AccountReportModel::resetAccModel() 

2023-07-20 17:11:39.120 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 0 

2023-07-20 17:11:39.122 DBG default: virtual int AccountReportModel::rowCount(const QModelIndex&) const 0 

2023-07-20 17:11:39.124 DBG qml:  Component.onDestruction of SevaAccountReportForSingleDate.qml
2023-07-20 17:11:39.124 DBG default: void SevaReport::resetAccDateRangeModel() 

2023-07-20 17:11:39.124 DBG default: void AccountReportDateRangeModel::resetAccDateRangeModel() 

